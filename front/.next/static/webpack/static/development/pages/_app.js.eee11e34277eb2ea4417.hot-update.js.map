{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.eee11e34277eb2ea4417.hot-update.js","sources":["webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/babel-runtime/core-js/json/stringify.js","webpack:///./node_modules/babel-runtime/core-js/number/max-safe-integer.js","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./node_modules/babel-runtime/core-js/symbol/for.js","webpack:///./node_modules/babel-types/lib/constants.js","webpack:///./node_modules/babel-types/lib/converters.js","webpack:///./node_modules/babel-types/lib/definitions/core.js","webpack:///./node_modules/babel-types/lib/definitions/es2015.js","webpack:///./node_modules/babel-types/lib/definitions/experimental.js","webpack:///./node_modules/babel-types/lib/definitions/flow.js","webpack:///./node_modules/babel-types/lib/definitions/index.js","webpack:///./node_modules/babel-types/lib/definitions/init.js","webpack:///./node_modules/babel-types/lib/definitions/jsx.js","webpack:///./node_modules/babel-types/lib/definitions/misc.js","webpack:///./node_modules/babel-types/lib/flow.js","webpack:///./node_modules/babel-types/lib/index.js","webpack:///./node_modules/babel-types/lib/react.js","webpack:///./node_modules/babel-types/lib/retrievers.js","webpack:///./node_modules/babel-types/lib/validators.js","webpack:///./node_modules/babel-types/node_modules/to-fast-properties/index.js","webpack:///./node_modules/core-js/library/fn/number/max-safe-integer.js","webpack:///./node_modules/core-js/library/fn/symbol/for.js","webpack:///./node_modules/core-js/library/modules/es6.number.max-safe-integer.js","webpack:///./node_modules/esutils/lib/ast.js","webpack:///./node_modules/esutils/lib/code.js","webpack:///./node_modules/esutils/lib/keyword.js","webpack:///./node_modules/esutils/lib/utils.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_baseAssign.js","webpack:///./node_modules/lodash/_baseAssignIn.js","webpack:///./node_modules/lodash/_baseClone.js","webpack:///./node_modules/lodash/_baseIsMap.js","webpack:///./node_modules/lodash/_baseIsRegExp.js","webpack:///./node_modules/lodash/_baseIsSet.js","webpack:///./node_modules/lodash/_cloneDataView.js","webpack:///./node_modules/lodash/_cloneRegExp.js","webpack:///./node_modules/lodash/_cloneSymbol.js","webpack:///./node_modules/lodash/_copySymbols.js","webpack:///./node_modules/lodash/_copySymbolsIn.js","webpack:///./node_modules/lodash/_getAllKeysIn.js","webpack:///./node_modules/lodash/_getSymbolsIn.js","webpack:///./node_modules/lodash/_initCloneArray.js","webpack:///./node_modules/lodash/_initCloneByTag.js","webpack:///./node_modules/lodash/clone.js","webpack:///./node_modules/lodash/isMap.js","webpack:///./node_modules/lodash/isRegExp.js","webpack:///./node_modules/lodash/isSet.js","webpack:///./node_modules/lodash/uniq.js","webpack:///./pages/_app.js"],"sourcesContent":["module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/number/max-safe-integer\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-symbols\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/symbol/for\"), __esModule: true };","\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;\r\n\r\nvar _for = require(\"babel-runtime/core-js/symbol/for\");\r\n\r\nvar _for2 = _interopRequireDefault(_for);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar STATEMENT_OR_BLOCK_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\r\nvar FLATTENABLE_KEYS = exports.FLATTENABLE_KEYS = [\"body\", \"expressions\"];\r\nvar FOR_INIT_KEYS = exports.FOR_INIT_KEYS = [\"left\", \"init\"];\r\nvar COMMENT_KEYS = exports.COMMENT_KEYS = [\"leadingComments\", \"trailingComments\", \"innerComments\"];\r\n\r\nvar LOGICAL_OPERATORS = exports.LOGICAL_OPERATORS = [\"||\", \"&&\"];\r\nvar UPDATE_OPERATORS = exports.UPDATE_OPERATORS = [\"++\", \"--\"];\r\n\r\nvar BOOLEAN_NUMBER_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\r\nvar EQUALITY_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\r\nvar COMPARISON_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = [].concat(EQUALITY_BINARY_OPERATORS, [\"in\", \"instanceof\"]);\r\nvar BOOLEAN_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = [].concat(COMPARISON_BINARY_OPERATORS, BOOLEAN_NUMBER_BINARY_OPERATORS);\r\nvar NUMBER_BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = [\"-\", \"/\", \"%\", \"*\", \"**\", \"&\", \"|\", \">>\", \">>>\", \"<<\", \"^\"];\r\nvar BINARY_OPERATORS = exports.BINARY_OPERATORS = [\"+\"].concat(NUMBER_BINARY_OPERATORS, BOOLEAN_BINARY_OPERATORS);\r\n\r\nvar BOOLEAN_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\r\nvar NUMBER_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"++\", \"--\", \"~\"];\r\nvar STRING_UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = [\"typeof\"];\r\nvar UNARY_OPERATORS = exports.UNARY_OPERATORS = [\"void\"].concat(BOOLEAN_UNARY_OPERATORS, NUMBER_UNARY_OPERATORS, STRING_UNARY_OPERATORS);\r\n\r\nvar INHERIT_KEYS = exports.INHERIT_KEYS = {\r\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\r\n  force: [\"start\", \"loc\", \"end\"]\r\n};\r\n\r\nvar BLOCK_SCOPED_SYMBOL = exports.BLOCK_SCOPED_SYMBOL = (0, _for2.default)(\"var used to be block scoped\");\r\nvar NOT_LOCAL_BINDING = exports.NOT_LOCAL_BINDING = (0, _for2.default)(\"should not be considered a local binding\");","\"use strict\";\r\n\r\nexports.__esModule = true;\r\n\r\nvar _maxSafeInteger = require(\"babel-runtime/core-js/number/max-safe-integer\");\r\n\r\nvar _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);\r\n\r\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\r\n\r\nvar _stringify2 = _interopRequireDefault(_stringify);\r\n\r\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\r\n\r\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\r\n\r\nexports.toComputedKey = toComputedKey;\r\nexports.toSequenceExpression = toSequenceExpression;\r\nexports.toKeyAlias = toKeyAlias;\r\nexports.toIdentifier = toIdentifier;\r\nexports.toBindingIdentifierName = toBindingIdentifierName;\r\nexports.toStatement = toStatement;\r\nexports.toExpression = toExpression;\r\nexports.toBlock = toBlock;\r\nexports.valueToNode = valueToNode;\r\n\r\nvar _isPlainObject = require(\"lodash/isPlainObject\");\r\n\r\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\r\n\r\nvar _isRegExp = require(\"lodash/isRegExp\");\r\n\r\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar t = _interopRequireWildcard(_index);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction toComputedKey(node) {\r\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key || node.property;\r\n\r\n  if (!node.computed) {\r\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\r\n  }\r\n  return key;\r\n}\r\n\r\nfunction gatherSequenceExpressions(nodes, scope, declars) {\r\n  var exprs = [];\r\n  var ensureLastUndefined = true;\r\n\r\n  for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\r\n    var _ref;\r\n\r\n    if (_isArray) {\r\n      if (_i >= _iterator.length) break;\r\n      _ref = _iterator[_i++];\r\n    } else {\r\n      _i = _iterator.next();\r\n      if (_i.done) break;\r\n      _ref = _i.value;\r\n    }\r\n\r\n    var node = _ref;\r\n\r\n    ensureLastUndefined = false;\r\n\r\n    if (t.isExpression(node)) {\r\n      exprs.push(node);\r\n    } else if (t.isExpressionStatement(node)) {\r\n      exprs.push(node.expression);\r\n    } else if (t.isVariableDeclaration(node)) {\r\n      if (node.kind !== \"var\") return;\r\n\r\n      for (var _iterator2 = node.declarations, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\r\n        var _ref2;\r\n\r\n        if (_isArray2) {\r\n          if (_i2 >= _iterator2.length) break;\r\n          _ref2 = _iterator2[_i2++];\r\n        } else {\r\n          _i2 = _iterator2.next();\r\n          if (_i2.done) break;\r\n          _ref2 = _i2.value;\r\n        }\r\n\r\n        var declar = _ref2;\r\n\r\n        var bindings = t.getBindingIdentifiers(declar);\r\n        for (var key in bindings) {\r\n          declars.push({\r\n            kind: node.kind,\r\n            id: bindings[key]\r\n          });\r\n        }\r\n\r\n        if (declar.init) {\r\n          exprs.push(t.assignmentExpression(\"=\", declar.id, declar.init));\r\n        }\r\n      }\r\n\r\n      ensureLastUndefined = true;\r\n    } else if (t.isIfStatement(node)) {\r\n      var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\r\n      var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\r\n      if (!consequent || !alternate) return;\r\n\r\n      exprs.push(t.conditionalExpression(node.test, consequent, alternate));\r\n    } else if (t.isBlockStatement(node)) {\r\n      var body = gatherSequenceExpressions(node.body, scope, declars);\r\n      if (!body) return;\r\n\r\n      exprs.push(body);\r\n    } else if (t.isEmptyStatement(node)) {\r\n      ensureLastUndefined = true;\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (ensureLastUndefined) {\r\n    exprs.push(scope.buildUndefinedNode());\r\n  }\r\n\r\n  if (exprs.length === 1) {\r\n    return exprs[0];\r\n  } else {\r\n    return t.sequenceExpression(exprs);\r\n  }\r\n}\r\n\r\nfunction toSequenceExpression(nodes, scope) {\r\n  if (!nodes || !nodes.length) return;\r\n\r\n  var declars = [];\r\n  var result = gatherSequenceExpressions(nodes, scope, declars);\r\n  if (!result) return;\r\n\r\n  for (var _iterator3 = declars, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\r\n    var _ref3;\r\n\r\n    if (_isArray3) {\r\n      if (_i3 >= _iterator3.length) break;\r\n      _ref3 = _iterator3[_i3++];\r\n    } else {\r\n      _i3 = _iterator3.next();\r\n      if (_i3.done) break;\r\n      _ref3 = _i3.value;\r\n    }\r\n\r\n    var declar = _ref3;\r\n\r\n    scope.push(declar);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction toKeyAlias(node) {\r\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key;\r\n\r\n  var alias = void 0;\r\n\r\n  if (node.kind === \"method\") {\r\n    return toKeyAlias.increment() + \"\";\r\n  } else if (t.isIdentifier(key)) {\r\n    alias = key.name;\r\n  } else if (t.isStringLiteral(key)) {\r\n    alias = (0, _stringify2.default)(key.value);\r\n  } else {\r\n    alias = (0, _stringify2.default)(t.removePropertiesDeep(t.cloneDeep(key)));\r\n  }\r\n\r\n  if (node.computed) {\r\n    alias = \"[\" + alias + \"]\";\r\n  }\r\n\r\n  if (node.static) {\r\n    alias = \"static:\" + alias;\r\n  }\r\n\r\n  return alias;\r\n}\r\n\r\ntoKeyAlias.uid = 0;\r\n\r\ntoKeyAlias.increment = function () {\r\n  if (toKeyAlias.uid >= _maxSafeInteger2.default) {\r\n    return toKeyAlias.uid = 0;\r\n  } else {\r\n    return toKeyAlias.uid++;\r\n  }\r\n};\r\n\r\nfunction toIdentifier(name) {\r\n  name = name + \"\";\r\n\r\n  name = name.replace(/[^a-zA-Z0-9$_]/g, \"-\");\r\n\r\n  name = name.replace(/^[-0-9]+/, \"\");\r\n\r\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\r\n    return c ? c.toUpperCase() : \"\";\r\n  });\r\n\r\n  if (!t.isValidIdentifier(name)) {\r\n    name = \"_\" + name;\r\n  }\r\n\r\n  return name || \"_\";\r\n}\r\n\r\nfunction toBindingIdentifierName(name) {\r\n  name = toIdentifier(name);\r\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\r\n  return name;\r\n}\r\n\r\nfunction toStatement(node, ignore) {\r\n  if (t.isStatement(node)) {\r\n    return node;\r\n  }\r\n\r\n  var mustHaveId = false;\r\n  var newType = void 0;\r\n\r\n  if (t.isClass(node)) {\r\n    mustHaveId = true;\r\n    newType = \"ClassDeclaration\";\r\n  } else if (t.isFunction(node)) {\r\n    mustHaveId = true;\r\n    newType = \"FunctionDeclaration\";\r\n  } else if (t.isAssignmentExpression(node)) {\r\n    return t.expressionStatement(node);\r\n  }\r\n\r\n  if (mustHaveId && !node.id) {\r\n    newType = false;\r\n  }\r\n\r\n  if (!newType) {\r\n    if (ignore) {\r\n      return false;\r\n    } else {\r\n      throw new Error(\"cannot turn \" + node.type + \" to a statement\");\r\n    }\r\n  }\r\n\r\n  node.type = newType;\r\n\r\n  return node;\r\n}\r\n\r\nfunction toExpression(node) {\r\n  if (t.isExpressionStatement(node)) {\r\n    node = node.expression;\r\n  }\r\n\r\n  if (t.isExpression(node)) {\r\n    return node;\r\n  }\r\n\r\n  if (t.isClass(node)) {\r\n    node.type = \"ClassExpression\";\r\n  } else if (t.isFunction(node)) {\r\n    node.type = \"FunctionExpression\";\r\n  }\r\n\r\n  if (!t.isExpression(node)) {\r\n    throw new Error(\"cannot turn \" + node.type + \" to an expression\");\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\nfunction toBlock(node, parent) {\r\n  if (t.isBlockStatement(node)) {\r\n    return node;\r\n  }\r\n\r\n  if (t.isEmptyStatement(node)) {\r\n    node = [];\r\n  }\r\n\r\n  if (!Array.isArray(node)) {\r\n    if (!t.isStatement(node)) {\r\n      if (t.isFunction(parent)) {\r\n        node = t.returnStatement(node);\r\n      } else {\r\n        node = t.expressionStatement(node);\r\n      }\r\n    }\r\n\r\n    node = [node];\r\n  }\r\n\r\n  return t.blockStatement(node);\r\n}\r\n\r\nfunction valueToNode(value) {\r\n  if (value === undefined) {\r\n    return t.identifier(\"undefined\");\r\n  }\r\n\r\n  if (value === true || value === false) {\r\n    return t.booleanLiteral(value);\r\n  }\r\n\r\n  if (value === null) {\r\n    return t.nullLiteral();\r\n  }\r\n\r\n  if (typeof value === \"string\") {\r\n    return t.stringLiteral(value);\r\n  }\r\n\r\n  if (typeof value === \"number\") {\r\n    return t.numericLiteral(value);\r\n  }\r\n\r\n  if ((0, _isRegExp2.default)(value)) {\r\n    var pattern = value.source;\r\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\r\n    return t.regExpLiteral(pattern, flags);\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return t.arrayExpression(value.map(t.valueToNode));\r\n  }\r\n\r\n  if ((0, _isPlainObject2.default)(value)) {\r\n    var props = [];\r\n    for (var key in value) {\r\n      var nodeKey = void 0;\r\n      if (t.isValidIdentifier(key)) {\r\n        nodeKey = t.identifier(key);\r\n      } else {\r\n        nodeKey = t.stringLiteral(key);\r\n      }\r\n      props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));\r\n    }\r\n    return t.objectExpression(props);\r\n  }\r\n\r\n  throw new Error(\"don't know how to turn this value into a node\");\r\n}","\"use strict\";\r\n\r\nvar _index = require(\"../index\");\r\n\r\nvar t = _interopRequireWildcard(_index);\r\n\r\nvar _constants = require(\"../constants\");\r\n\r\nvar _index2 = require(\"./index\");\r\n\r\nvar _index3 = _interopRequireDefault(_index2);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\n(0, _index3.default)(\"ArrayExpression\", {\r\n  fields: {\r\n    elements: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeOrValueType)(\"null\", \"Expression\", \"SpreadElement\"))),\r\n      default: []\r\n    }\r\n  },\r\n  visitor: [\"elements\"],\r\n  aliases: [\"Expression\"]\r\n});\r\n\r\n(0, _index3.default)(\"AssignmentExpression\", {\r\n  fields: {\r\n    operator: {\r\n      validate: (0, _index2.assertValueType)(\"string\")\r\n    },\r\n    left: {\r\n      validate: (0, _index2.assertNodeType)(\"LVal\")\r\n    },\r\n    right: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    }\r\n  },\r\n  builder: [\"operator\", \"left\", \"right\"],\r\n  visitor: [\"left\", \"right\"],\r\n  aliases: [\"Expression\"]\r\n});\r\n\r\n(0, _index3.default)(\"BinaryExpression\", {\r\n  builder: [\"operator\", \"left\", \"right\"],\r\n  fields: {\r\n    operator: {\r\n      validate: _index2.assertOneOf.apply(undefined, _constants.BINARY_OPERATORS)\r\n    },\r\n    left: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    right: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    }\r\n  },\r\n  visitor: [\"left\", \"right\"],\r\n  aliases: [\"Binary\", \"Expression\"]\r\n});\r\n\r\n(0, _index3.default)(\"Directive\", {\r\n  visitor: [\"value\"],\r\n  fields: {\r\n    value: {\r\n      validate: (0, _index2.assertNodeType)(\"DirectiveLiteral\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"DirectiveLiteral\", {\r\n  builder: [\"value\"],\r\n  fields: {\r\n    value: {\r\n      validate: (0, _index2.assertValueType)(\"string\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"BlockStatement\", {\r\n  builder: [\"body\", \"directives\"],\r\n  visitor: [\"directives\", \"body\"],\r\n  fields: {\r\n    directives: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Directive\"))),\r\n      default: []\r\n    },\r\n    body: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Statement\")))\r\n    }\r\n  },\r\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"]\r\n});\r\n\r\n(0, _index3.default)(\"BreakStatement\", {\r\n  visitor: [\"label\"],\r\n  fields: {\r\n    label: {\r\n      validate: (0, _index2.assertNodeType)(\"Identifier\"),\r\n      optional: true\r\n    }\r\n  },\r\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\r\n});\r\n\r\n(0, _index3.default)(\"CallExpression\", {\r\n  visitor: [\"callee\", \"arguments\"],\r\n  fields: {\r\n    callee: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    arguments: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Expression\", \"SpreadElement\")))\r\n    }\r\n  },\r\n  aliases: [\"Expression\"]\r\n});\r\n\r\n(0, _index3.default)(\"CatchClause\", {\r\n  visitor: [\"param\", \"body\"],\r\n  fields: {\r\n    param: {\r\n      validate: (0, _index2.assertNodeType)(\"Identifier\")\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\r\n    }\r\n  },\r\n  aliases: [\"Scopable\"]\r\n});\r\n\r\n(0, _index3.default)(\"ConditionalExpression\", {\r\n  visitor: [\"test\", \"consequent\", \"alternate\"],\r\n  fields: {\r\n    test: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    consequent: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    alternate: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    }\r\n  },\r\n  aliases: [\"Expression\", \"Conditional\"]\r\n});\r\n\r\n(0, _index3.default)(\"ContinueStatement\", {\r\n  visitor: [\"label\"],\r\n  fields: {\r\n    label: {\r\n      validate: (0, _index2.assertNodeType)(\"Identifier\"),\r\n      optional: true\r\n    }\r\n  },\r\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\r\n});\r\n\r\n(0, _index3.default)(\"DebuggerStatement\", {\r\n  aliases: [\"Statement\"]\r\n});\r\n\r\n(0, _index3.default)(\"DoWhileStatement\", {\r\n  visitor: [\"test\", \"body\"],\r\n  fields: {\r\n    test: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"Statement\")\r\n    }\r\n  },\r\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"]\r\n});\r\n\r\n(0, _index3.default)(\"EmptyStatement\", {\r\n  aliases: [\"Statement\"]\r\n});\r\n\r\n(0, _index3.default)(\"ExpressionStatement\", {\r\n  visitor: [\"expression\"],\r\n  fields: {\r\n    expression: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    }\r\n  },\r\n  aliases: [\"Statement\", \"ExpressionWrapper\"]\r\n});\r\n\r\n(0, _index3.default)(\"File\", {\r\n  builder: [\"program\", \"comments\", \"tokens\"],\r\n  visitor: [\"program\"],\r\n  fields: {\r\n    program: {\r\n      validate: (0, _index2.assertNodeType)(\"Program\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"ForInStatement\", {\r\n  visitor: [\"left\", \"right\", \"body\"],\r\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\r\n  fields: {\r\n    left: {\r\n      validate: (0, _index2.assertNodeType)(\"VariableDeclaration\", \"LVal\")\r\n    },\r\n    right: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"Statement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"ForStatement\", {\r\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\r\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\r\n  fields: {\r\n    init: {\r\n      validate: (0, _index2.assertNodeType)(\"VariableDeclaration\", \"Expression\"),\r\n      optional: true\r\n    },\r\n    test: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\"),\r\n      optional: true\r\n    },\r\n    update: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\"),\r\n      optional: true\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"Statement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"FunctionDeclaration\", {\r\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\r\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\r\n  fields: {\r\n    id: {\r\n      validate: (0, _index2.assertNodeType)(\"Identifier\")\r\n    },\r\n    params: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"LVal\")))\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\r\n    },\r\n    generator: {\r\n      default: false,\r\n      validate: (0, _index2.assertValueType)(\"boolean\")\r\n    },\r\n    async: {\r\n      default: false,\r\n      validate: (0, _index2.assertValueType)(\"boolean\")\r\n    }\r\n  },\r\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Statement\", \"Pureish\", \"Declaration\"]\r\n});\r\n\r\n(0, _index3.default)(\"FunctionExpression\", {\r\n  inherits: \"FunctionDeclaration\",\r\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\r\n  fields: {\r\n    id: {\r\n      validate: (0, _index2.assertNodeType)(\"Identifier\"),\r\n      optional: true\r\n    },\r\n    params: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"LVal\")))\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\r\n    },\r\n    generator: {\r\n      default: false,\r\n      validate: (0, _index2.assertValueType)(\"boolean\")\r\n    },\r\n    async: {\r\n      default: false,\r\n      validate: (0, _index2.assertValueType)(\"boolean\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"Identifier\", {\r\n  builder: [\"name\"],\r\n  visitor: [\"typeAnnotation\"],\r\n  aliases: [\"Expression\", \"LVal\"],\r\n  fields: {\r\n    name: {\r\n      validate: function validate(node, key, val) {\r\n        if (!t.isValidIdentifier(val)) {}\r\n      }\r\n    },\r\n    decorators: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Decorator\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"IfStatement\", {\r\n  visitor: [\"test\", \"consequent\", \"alternate\"],\r\n  aliases: [\"Statement\", \"Conditional\"],\r\n  fields: {\r\n    test: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    consequent: {\r\n      validate: (0, _index2.assertNodeType)(\"Statement\")\r\n    },\r\n    alternate: {\r\n      optional: true,\r\n      validate: (0, _index2.assertNodeType)(\"Statement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"LabeledStatement\", {\r\n  visitor: [\"label\", \"body\"],\r\n  aliases: [\"Statement\"],\r\n  fields: {\r\n    label: {\r\n      validate: (0, _index2.assertNodeType)(\"Identifier\")\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"Statement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"StringLiteral\", {\r\n  builder: [\"value\"],\r\n  fields: {\r\n    value: {\r\n      validate: (0, _index2.assertValueType)(\"string\")\r\n    }\r\n  },\r\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\r\n});\r\n\r\n(0, _index3.default)(\"NumericLiteral\", {\r\n  builder: [\"value\"],\r\n  deprecatedAlias: \"NumberLiteral\",\r\n  fields: {\r\n    value: {\r\n      validate: (0, _index2.assertValueType)(\"number\")\r\n    }\r\n  },\r\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\r\n});\r\n\r\n(0, _index3.default)(\"NullLiteral\", {\r\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\r\n});\r\n\r\n(0, _index3.default)(\"BooleanLiteral\", {\r\n  builder: [\"value\"],\r\n  fields: {\r\n    value: {\r\n      validate: (0, _index2.assertValueType)(\"boolean\")\r\n    }\r\n  },\r\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\r\n});\r\n\r\n(0, _index3.default)(\"RegExpLiteral\", {\r\n  builder: [\"pattern\", \"flags\"],\r\n  deprecatedAlias: \"RegexLiteral\",\r\n  aliases: [\"Expression\", \"Literal\"],\r\n  fields: {\r\n    pattern: {\r\n      validate: (0, _index2.assertValueType)(\"string\")\r\n    },\r\n    flags: {\r\n      validate: (0, _index2.assertValueType)(\"string\"),\r\n      default: \"\"\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"LogicalExpression\", {\r\n  builder: [\"operator\", \"left\", \"right\"],\r\n  visitor: [\"left\", \"right\"],\r\n  aliases: [\"Binary\", \"Expression\"],\r\n  fields: {\r\n    operator: {\r\n      validate: _index2.assertOneOf.apply(undefined, _constants.LOGICAL_OPERATORS)\r\n    },\r\n    left: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    right: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"MemberExpression\", {\r\n  builder: [\"object\", \"property\", \"computed\"],\r\n  visitor: [\"object\", \"property\"],\r\n  aliases: [\"Expression\", \"LVal\"],\r\n  fields: {\r\n    object: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    property: {\r\n      validate: function validate(node, key, val) {\r\n        var expectedType = node.computed ? \"Expression\" : \"Identifier\";\r\n        (0, _index2.assertNodeType)(expectedType)(node, key, val);\r\n      }\r\n    },\r\n    computed: {\r\n      default: false\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"NewExpression\", {\r\n  visitor: [\"callee\", \"arguments\"],\r\n  aliases: [\"Expression\"],\r\n  fields: {\r\n    callee: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    arguments: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Expression\", \"SpreadElement\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"Program\", {\r\n  visitor: [\"directives\", \"body\"],\r\n  builder: [\"body\", \"directives\"],\r\n  fields: {\r\n    directives: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Directive\"))),\r\n      default: []\r\n    },\r\n    body: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Statement\")))\r\n    }\r\n  },\r\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"FunctionParent\"]\r\n});\r\n\r\n(0, _index3.default)(\"ObjectExpression\", {\r\n  visitor: [\"properties\"],\r\n  aliases: [\"Expression\"],\r\n  fields: {\r\n    properties: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"ObjectMethod\", \"ObjectProperty\", \"SpreadProperty\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"ObjectMethod\", {\r\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\"],\r\n  fields: {\r\n    kind: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"string\"), (0, _index2.assertOneOf)(\"method\", \"get\", \"set\")),\r\n      default: \"method\"\r\n    },\r\n    computed: {\r\n      validate: (0, _index2.assertValueType)(\"boolean\"),\r\n      default: false\r\n    },\r\n    key: {\r\n      validate: function validate(node, key, val) {\r\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\r\n        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\r\n      }\r\n    },\r\n    decorators: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Decorator\")))\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\r\n    },\r\n    generator: {\r\n      default: false,\r\n      validate: (0, _index2.assertValueType)(\"boolean\")\r\n    },\r\n    async: {\r\n      default: false,\r\n      validate: (0, _index2.assertValueType)(\"boolean\")\r\n    }\r\n  },\r\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\r\n  aliases: [\"UserWhitespacable\", \"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"ObjectMember\"]\r\n});\r\n\r\n(0, _index3.default)(\"ObjectProperty\", {\r\n  builder: [\"key\", \"value\", \"computed\", \"shorthand\", \"decorators\"],\r\n  fields: {\r\n    computed: {\r\n      validate: (0, _index2.assertValueType)(\"boolean\"),\r\n      default: false\r\n    },\r\n    key: {\r\n      validate: function validate(node, key, val) {\r\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\r\n        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\r\n      }\r\n    },\r\n    value: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\", \"Pattern\", \"RestElement\")\r\n    },\r\n    shorthand: {\r\n      validate: (0, _index2.assertValueType)(\"boolean\"),\r\n      default: false\r\n    },\r\n    decorators: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Decorator\"))),\r\n      optional: true\r\n    }\r\n  },\r\n  visitor: [\"key\", \"value\", \"decorators\"],\r\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"]\r\n});\r\n\r\n(0, _index3.default)(\"RestElement\", {\r\n  visitor: [\"argument\", \"typeAnnotation\"],\r\n  aliases: [\"LVal\"],\r\n  fields: {\r\n    argument: {\r\n      validate: (0, _index2.assertNodeType)(\"LVal\")\r\n    },\r\n    decorators: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Decorator\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"ReturnStatement\", {\r\n  visitor: [\"argument\"],\r\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\r\n  fields: {\r\n    argument: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\"),\r\n      optional: true\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"SequenceExpression\", {\r\n  visitor: [\"expressions\"],\r\n  fields: {\r\n    expressions: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Expression\")))\r\n    }\r\n  },\r\n  aliases: [\"Expression\"]\r\n});\r\n\r\n(0, _index3.default)(\"SwitchCase\", {\r\n  visitor: [\"test\", \"consequent\"],\r\n  fields: {\r\n    test: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\"),\r\n      optional: true\r\n    },\r\n    consequent: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Statement\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"SwitchStatement\", {\r\n  visitor: [\"discriminant\", \"cases\"],\r\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\r\n  fields: {\r\n    discriminant: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    cases: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"SwitchCase\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"ThisExpression\", {\r\n  aliases: [\"Expression\"]\r\n});\r\n\r\n(0, _index3.default)(\"ThrowStatement\", {\r\n  visitor: [\"argument\"],\r\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\r\n  fields: {\r\n    argument: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"TryStatement\", {\r\n  visitor: [\"block\", \"handler\", \"finalizer\"],\r\n  aliases: [\"Statement\"],\r\n  fields: {\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\r\n    },\r\n    handler: {\r\n      optional: true,\r\n      handler: (0, _index2.assertNodeType)(\"BlockStatement\")\r\n    },\r\n    finalizer: {\r\n      optional: true,\r\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"UnaryExpression\", {\r\n  builder: [\"operator\", \"argument\", \"prefix\"],\r\n  fields: {\r\n    prefix: {\r\n      default: true\r\n    },\r\n    argument: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    operator: {\r\n      validate: _index2.assertOneOf.apply(undefined, _constants.UNARY_OPERATORS)\r\n    }\r\n  },\r\n  visitor: [\"argument\"],\r\n  aliases: [\"UnaryLike\", \"Expression\"]\r\n});\r\n\r\n(0, _index3.default)(\"UpdateExpression\", {\r\n  builder: [\"operator\", \"argument\", \"prefix\"],\r\n  fields: {\r\n    prefix: {\r\n      default: false\r\n    },\r\n    argument: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    operator: {\r\n      validate: _index2.assertOneOf.apply(undefined, _constants.UPDATE_OPERATORS)\r\n    }\r\n  },\r\n  visitor: [\"argument\"],\r\n  aliases: [\"Expression\"]\r\n});\r\n\r\n(0, _index3.default)(\"VariableDeclaration\", {\r\n  builder: [\"kind\", \"declarations\"],\r\n  visitor: [\"declarations\"],\r\n  aliases: [\"Statement\", \"Declaration\"],\r\n  fields: {\r\n    kind: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"string\"), (0, _index2.assertOneOf)(\"var\", \"let\", \"const\"))\r\n    },\r\n    declarations: {\r\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"VariableDeclarator\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"VariableDeclarator\", {\r\n  visitor: [\"id\", \"init\"],\r\n  fields: {\r\n    id: {\r\n      validate: (0, _index2.assertNodeType)(\"LVal\")\r\n    },\r\n    init: {\r\n      optional: true,\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"WhileStatement\", {\r\n  visitor: [\"test\", \"body\"],\r\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\r\n  fields: {\r\n    test: {\r\n      validate: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\", \"Statement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index3.default)(\"WithStatement\", {\r\n  visitor: [\"object\", \"body\"],\r\n  aliases: [\"Statement\"],\r\n  fields: {\r\n    object: {\r\n      object: (0, _index2.assertNodeType)(\"Expression\")\r\n    },\r\n    body: {\r\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\", \"Statement\")\r\n    }\r\n  }\r\n});","\"use strict\";\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar _index2 = _interopRequireDefault(_index);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n(0, _index2.default)(\"AssignmentPattern\", {\r\n  visitor: [\"left\", \"right\"],\r\n  aliases: [\"Pattern\", \"LVal\"],\r\n  fields: {\r\n    left: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    },\r\n    right: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    },\r\n    decorators: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ArrayPattern\", {\r\n  visitor: [\"elements\", \"typeAnnotation\"],\r\n  aliases: [\"Pattern\", \"LVal\"],\r\n  fields: {\r\n    elements: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Identifier\", \"Pattern\", \"RestElement\")))\r\n    },\r\n    decorators: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ArrowFunctionExpression\", {\r\n  builder: [\"params\", \"body\", \"async\"],\r\n  visitor: [\"params\", \"body\", \"returnType\", \"typeParameters\"],\r\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\r\n  fields: {\r\n    params: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"LVal\")))\r\n    },\r\n    body: {\r\n      validate: (0, _index.assertNodeType)(\"BlockStatement\", \"Expression\")\r\n    },\r\n    async: {\r\n      validate: (0, _index.assertValueType)(\"boolean\"),\r\n      default: false\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ClassBody\", {\r\n  visitor: [\"body\"],\r\n  fields: {\r\n    body: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"ClassMethod\", \"ClassProperty\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ClassDeclaration\", {\r\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\r\n  visitor: [\"id\", \"body\", \"superClass\", \"mixins\", \"typeParameters\", \"superTypeParameters\", \"implements\", \"decorators\"],\r\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\", \"Pureish\"],\r\n  fields: {\r\n    id: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    },\r\n    body: {\r\n      validate: (0, _index.assertNodeType)(\"ClassBody\")\r\n    },\r\n    superClass: {\r\n      optional: true,\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    },\r\n    decorators: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ClassExpression\", {\r\n  inherits: \"ClassDeclaration\",\r\n  aliases: [\"Scopable\", \"Class\", \"Expression\", \"Pureish\"],\r\n  fields: {\r\n    id: {\r\n      optional: true,\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    },\r\n    body: {\r\n      validate: (0, _index.assertNodeType)(\"ClassBody\")\r\n    },\r\n    superClass: {\r\n      optional: true,\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    },\r\n    decorators: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ExportAllDeclaration\", {\r\n  visitor: [\"source\"],\r\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\r\n  fields: {\r\n    source: {\r\n      validate: (0, _index.assertNodeType)(\"StringLiteral\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ExportDefaultDeclaration\", {\r\n  visitor: [\"declaration\"],\r\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\r\n  fields: {\r\n    declaration: {\r\n      validate: (0, _index.assertNodeType)(\"FunctionDeclaration\", \"ClassDeclaration\", \"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ExportNamedDeclaration\", {\r\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\r\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\r\n  fields: {\r\n    declaration: {\r\n      validate: (0, _index.assertNodeType)(\"Declaration\"),\r\n      optional: true\r\n    },\r\n    specifiers: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"ExportSpecifier\")))\r\n    },\r\n    source: {\r\n      validate: (0, _index.assertNodeType)(\"StringLiteral\"),\r\n      optional: true\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ExportSpecifier\", {\r\n  visitor: [\"local\", \"exported\"],\r\n  aliases: [\"ModuleSpecifier\"],\r\n  fields: {\r\n    local: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    },\r\n    exported: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ForOfStatement\", {\r\n  visitor: [\"left\", \"right\", \"body\"],\r\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\r\n  fields: {\r\n    left: {\r\n      validate: (0, _index.assertNodeType)(\"VariableDeclaration\", \"LVal\")\r\n    },\r\n    right: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    },\r\n    body: {\r\n      validate: (0, _index.assertNodeType)(\"Statement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ImportDeclaration\", {\r\n  visitor: [\"specifiers\", \"source\"],\r\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\"],\r\n  fields: {\r\n    specifiers: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"ImportSpecifier\", \"ImportDefaultSpecifier\", \"ImportNamespaceSpecifier\")))\r\n    },\r\n    source: {\r\n      validate: (0, _index.assertNodeType)(\"StringLiteral\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ImportDefaultSpecifier\", {\r\n  visitor: [\"local\"],\r\n  aliases: [\"ModuleSpecifier\"],\r\n  fields: {\r\n    local: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ImportNamespaceSpecifier\", {\r\n  visitor: [\"local\"],\r\n  aliases: [\"ModuleSpecifier\"],\r\n  fields: {\r\n    local: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ImportSpecifier\", {\r\n  visitor: [\"local\", \"imported\"],\r\n  aliases: [\"ModuleSpecifier\"],\r\n  fields: {\r\n    local: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    },\r\n    imported: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    },\r\n    importKind: {\r\n      validate: (0, _index.assertOneOf)(null, \"type\", \"typeof\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"MetaProperty\", {\r\n  visitor: [\"meta\", \"property\"],\r\n  aliases: [\"Expression\"],\r\n  fields: {\r\n    meta: {\r\n      validate: (0, _index.assertValueType)(\"string\")\r\n    },\r\n    property: {\r\n      validate: (0, _index.assertValueType)(\"string\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ClassMethod\", {\r\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\r\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\"],\r\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\r\n  fields: {\r\n    kind: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"string\"), (0, _index.assertOneOf)(\"get\", \"set\", \"method\", \"constructor\")),\r\n      default: \"method\"\r\n    },\r\n    computed: {\r\n      default: false,\r\n      validate: (0, _index.assertValueType)(\"boolean\")\r\n    },\r\n    static: {\r\n      default: false,\r\n      validate: (0, _index.assertValueType)(\"boolean\")\r\n    },\r\n    key: {\r\n      validate: function validate(node, key, val) {\r\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\r\n        _index.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\r\n      }\r\n    },\r\n    params: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"LVal\")))\r\n    },\r\n    body: {\r\n      validate: (0, _index.assertNodeType)(\"BlockStatement\")\r\n    },\r\n    generator: {\r\n      default: false,\r\n      validate: (0, _index.assertValueType)(\"boolean\")\r\n    },\r\n    async: {\r\n      default: false,\r\n      validate: (0, _index.assertValueType)(\"boolean\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ObjectPattern\", {\r\n  visitor: [\"properties\", \"typeAnnotation\"],\r\n  aliases: [\"Pattern\", \"LVal\"],\r\n  fields: {\r\n    properties: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"RestProperty\", \"Property\")))\r\n    },\r\n    decorators: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Decorator\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"SpreadElement\", {\r\n  visitor: [\"argument\"],\r\n  aliases: [\"UnaryLike\"],\r\n  fields: {\r\n    argument: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"Super\", {\r\n  aliases: [\"Expression\"]\r\n});\r\n\r\n(0, _index2.default)(\"TaggedTemplateExpression\", {\r\n  visitor: [\"tag\", \"quasi\"],\r\n  aliases: [\"Expression\"],\r\n  fields: {\r\n    tag: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    },\r\n    quasi: {\r\n      validate: (0, _index.assertNodeType)(\"TemplateLiteral\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"TemplateElement\", {\r\n  builder: [\"value\", \"tail\"],\r\n  fields: {\r\n    value: {},\r\n    tail: {\r\n      validate: (0, _index.assertValueType)(\"boolean\"),\r\n      default: false\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"TemplateLiteral\", {\r\n  visitor: [\"quasis\", \"expressions\"],\r\n  aliases: [\"Expression\", \"Literal\"],\r\n  fields: {\r\n    quasis: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"TemplateElement\")))\r\n    },\r\n    expressions: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"Expression\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"YieldExpression\", {\r\n  builder: [\"argument\", \"delegate\"],\r\n  visitor: [\"argument\"],\r\n  aliases: [\"Expression\", \"Terminatorless\"],\r\n  fields: {\r\n    delegate: {\r\n      validate: (0, _index.assertValueType)(\"boolean\"),\r\n      default: false\r\n    },\r\n    argument: {\r\n      optional: true,\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});","\"use strict\";\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar _index2 = _interopRequireDefault(_index);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n(0, _index2.default)(\"AwaitExpression\", {\r\n  builder: [\"argument\"],\r\n  visitor: [\"argument\"],\r\n  aliases: [\"Expression\", \"Terminatorless\"],\r\n  fields: {\r\n    argument: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ForAwaitStatement\", {\r\n  visitor: [\"left\", \"right\", \"body\"],\r\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\r\n  fields: {\r\n    left: {\r\n      validate: (0, _index.assertNodeType)(\"VariableDeclaration\", \"LVal\")\r\n    },\r\n    right: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    },\r\n    body: {\r\n      validate: (0, _index.assertNodeType)(\"Statement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"BindExpression\", {\r\n  visitor: [\"object\", \"callee\"],\r\n  aliases: [\"Expression\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"Import\", {\r\n  aliases: [\"Expression\"]\r\n});\r\n\r\n(0, _index2.default)(\"Decorator\", {\r\n  visitor: [\"expression\"],\r\n  fields: {\r\n    expression: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"DoExpression\", {\r\n  visitor: [\"body\"],\r\n  aliases: [\"Expression\"],\r\n  fields: {\r\n    body: {\r\n      validate: (0, _index.assertNodeType)(\"BlockStatement\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ExportDefaultSpecifier\", {\r\n  visitor: [\"exported\"],\r\n  aliases: [\"ModuleSpecifier\"],\r\n  fields: {\r\n    exported: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"ExportNamespaceSpecifier\", {\r\n  visitor: [\"exported\"],\r\n  aliases: [\"ModuleSpecifier\"],\r\n  fields: {\r\n    exported: {\r\n      validate: (0, _index.assertNodeType)(\"Identifier\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"RestProperty\", {\r\n  visitor: [\"argument\"],\r\n  aliases: [\"UnaryLike\"],\r\n  fields: {\r\n    argument: {\r\n      validate: (0, _index.assertNodeType)(\"LVal\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"SpreadProperty\", {\r\n  visitor: [\"argument\"],\r\n  aliases: [\"UnaryLike\"],\r\n  fields: {\r\n    argument: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});","\"use strict\";\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar _index2 = _interopRequireDefault(_index);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n(0, _index2.default)(\"AnyTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ArrayTypeAnnotation\", {\r\n  visitor: [\"elementType\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"BooleanTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"BooleanLiteralTypeAnnotation\", {\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"NullLiteralTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ClassImplements\", {\r\n  visitor: [\"id\", \"typeParameters\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ClassProperty\", {\r\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\r\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\"],\r\n  aliases: [\"Property\"],\r\n  fields: {\r\n    computed: {\r\n      validate: (0, _index.assertValueType)(\"boolean\"),\r\n      default: false\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"DeclareClass\", {\r\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"DeclareFunction\", {\r\n  visitor: [\"id\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"DeclareInterface\", {\r\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"DeclareModule\", {\r\n  visitor: [\"id\", \"body\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"DeclareModuleExports\", {\r\n  visitor: [\"typeAnnotation\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"DeclareTypeAlias\", {\r\n  visitor: [\"id\", \"typeParameters\", \"right\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"DeclareOpaqueType\", {\r\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"DeclareVariable\", {\r\n  visitor: [\"id\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"DeclareExportDeclaration\", {\r\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ExistentialTypeParam\", {\r\n  aliases: [\"Flow\"]\r\n});\r\n\r\n(0, _index2.default)(\"FunctionTypeAnnotation\", {\r\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"FunctionTypeParam\", {\r\n  visitor: [\"name\", \"typeAnnotation\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"GenericTypeAnnotation\", {\r\n  visitor: [\"id\", \"typeParameters\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"InterfaceExtends\", {\r\n  visitor: [\"id\", \"typeParameters\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"InterfaceDeclaration\", {\r\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"IntersectionTypeAnnotation\", {\r\n  visitor: [\"types\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"MixedTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"]\r\n});\r\n\r\n(0, _index2.default)(\"EmptyTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"]\r\n});\r\n\r\n(0, _index2.default)(\"NullableTypeAnnotation\", {\r\n  visitor: [\"typeAnnotation\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"NumericLiteralTypeAnnotation\", {\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"NumberTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"StringLiteralTypeAnnotation\", {\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"StringTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ThisTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"TupleTypeAnnotation\", {\r\n  visitor: [\"types\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"TypeofTypeAnnotation\", {\r\n  visitor: [\"argument\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"TypeAlias\", {\r\n  visitor: [\"id\", \"typeParameters\", \"right\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"OpaqueType\", {\r\n  visitor: [\"id\", \"typeParameters\", \"impltype\", \"supertype\"],\r\n  aliases: [\"Flow\", \"FlowDeclaration\", \"Statement\", \"Declaration\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"TypeAnnotation\", {\r\n  visitor: [\"typeAnnotation\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"TypeCastExpression\", {\r\n  visitor: [\"expression\", \"typeAnnotation\"],\r\n  aliases: [\"Flow\", \"ExpressionWrapper\", \"Expression\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"TypeParameter\", {\r\n  visitor: [\"bound\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"TypeParameterDeclaration\", {\r\n  visitor: [\"params\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"TypeParameterInstantiation\", {\r\n  visitor: [\"params\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ObjectTypeAnnotation\", {\r\n  visitor: [\"properties\", \"indexers\", \"callProperties\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ObjectTypeCallProperty\", {\r\n  visitor: [\"value\"],\r\n  aliases: [\"Flow\", \"UserWhitespacable\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ObjectTypeIndexer\", {\r\n  visitor: [\"id\", \"key\", \"value\"],\r\n  aliases: [\"Flow\", \"UserWhitespacable\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ObjectTypeProperty\", {\r\n  visitor: [\"key\", \"value\"],\r\n  aliases: [\"Flow\", \"UserWhitespacable\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"ObjectTypeSpreadProperty\", {\r\n  visitor: [\"argument\"],\r\n  aliases: [\"Flow\", \"UserWhitespacable\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"QualifiedTypeIdentifier\", {\r\n  visitor: [\"id\", \"qualification\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"UnionTypeAnnotation\", {\r\n  visitor: [\"types\"],\r\n  aliases: [\"Flow\"],\r\n  fields: {}\r\n});\r\n\r\n(0, _index2.default)(\"VoidTypeAnnotation\", {\r\n  aliases: [\"Flow\", \"FlowBaseAnnotation\"],\r\n  fields: {}\r\n});","\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = undefined;\r\n\r\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\r\n\r\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\r\n\r\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\r\n\r\nvar _stringify2 = _interopRequireDefault(_stringify);\r\n\r\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\r\n\r\nvar _typeof3 = _interopRequireDefault(_typeof2);\r\n\r\nexports.assertEach = assertEach;\r\nexports.assertOneOf = assertOneOf;\r\nexports.assertNodeType = assertNodeType;\r\nexports.assertNodeOrValueType = assertNodeOrValueType;\r\nexports.assertValueType = assertValueType;\r\nexports.chain = chain;\r\nexports.default = defineType;\r\n\r\nvar _index = require(\"../index\");\r\n\r\nvar t = _interopRequireWildcard(_index);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar VISITOR_KEYS = exports.VISITOR_KEYS = {};\r\nvar ALIAS_KEYS = exports.ALIAS_KEYS = {};\r\nvar NODE_FIELDS = exports.NODE_FIELDS = {};\r\nvar BUILDER_KEYS = exports.BUILDER_KEYS = {};\r\nvar DEPRECATED_KEYS = exports.DEPRECATED_KEYS = {};\r\n\r\nfunction getType(val) {\r\n  if (Array.isArray(val)) {\r\n    return \"array\";\r\n  } else if (val === null) {\r\n    return \"null\";\r\n  } else if (val === undefined) {\r\n    return \"undefined\";\r\n  } else {\r\n    return typeof val === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(val);\r\n  }\r\n}\r\n\r\nfunction assertEach(callback) {\r\n  function validator(node, key, val) {\r\n    if (!Array.isArray(val)) return;\r\n\r\n    for (var i = 0; i < val.length; i++) {\r\n      callback(node, key + \"[\" + i + \"]\", val[i]);\r\n    }\r\n  }\r\n  validator.each = callback;\r\n  return validator;\r\n}\r\n\r\nfunction assertOneOf() {\r\n  for (var _len = arguments.length, vals = Array(_len), _key = 0; _key < _len; _key++) {\r\n    vals[_key] = arguments[_key];\r\n  }\r\n\r\n  function validate(node, key, val) {\r\n    if (vals.indexOf(val) < 0) {\r\n      throw new TypeError(\"Property \" + key + \" expected value to be one of \" + (0, _stringify2.default)(vals) + \" but got \" + (0, _stringify2.default)(val));\r\n    }\r\n  }\r\n\r\n  validate.oneOf = vals;\r\n\r\n  return validate;\r\n}\r\n\r\nfunction assertNodeType() {\r\n  for (var _len2 = arguments.length, types = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n    types[_key2] = arguments[_key2];\r\n  }\r\n\r\n  function validate(node, key, val) {\r\n    var valid = false;\r\n\r\n    for (var _iterator = types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\r\n      var _ref;\r\n\r\n      if (_isArray) {\r\n        if (_i >= _iterator.length) break;\r\n        _ref = _iterator[_i++];\r\n      } else {\r\n        _i = _iterator.next();\r\n        if (_i.done) break;\r\n        _ref = _i.value;\r\n      }\r\n\r\n      var type = _ref;\r\n\r\n      if (t.is(type, val)) {\r\n        valid = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!valid) {\r\n      throw new TypeError(\"Property \" + key + \" of \" + node.type + \" expected node to be of a type \" + (0, _stringify2.default)(types) + \" \" + (\"but instead got \" + (0, _stringify2.default)(val && val.type)));\r\n    }\r\n  }\r\n\r\n  validate.oneOfNodeTypes = types;\r\n\r\n  return validate;\r\n}\r\n\r\nfunction assertNodeOrValueType() {\r\n  for (var _len3 = arguments.length, types = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n    types[_key3] = arguments[_key3];\r\n  }\r\n\r\n  function validate(node, key, val) {\r\n    var valid = false;\r\n\r\n    for (var _iterator2 = types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\r\n      var _ref2;\r\n\r\n      if (_isArray2) {\r\n        if (_i2 >= _iterator2.length) break;\r\n        _ref2 = _iterator2[_i2++];\r\n      } else {\r\n        _i2 = _iterator2.next();\r\n        if (_i2.done) break;\r\n        _ref2 = _i2.value;\r\n      }\r\n\r\n      var type = _ref2;\r\n\r\n      if (getType(val) === type || t.is(type, val)) {\r\n        valid = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!valid) {\r\n      throw new TypeError(\"Property \" + key + \" of \" + node.type + \" expected node to be of a type \" + (0, _stringify2.default)(types) + \" \" + (\"but instead got \" + (0, _stringify2.default)(val && val.type)));\r\n    }\r\n  }\r\n\r\n  validate.oneOfNodeOrValueTypes = types;\r\n\r\n  return validate;\r\n}\r\n\r\nfunction assertValueType(type) {\r\n  function validate(node, key, val) {\r\n    var valid = getType(val) === type;\r\n\r\n    if (!valid) {\r\n      throw new TypeError(\"Property \" + key + \" expected type of \" + type + \" but got \" + getType(val));\r\n    }\r\n  }\r\n\r\n  validate.type = type;\r\n\r\n  return validate;\r\n}\r\n\r\nfunction chain() {\r\n  for (var _len4 = arguments.length, fns = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n    fns[_key4] = arguments[_key4];\r\n  }\r\n\r\n  function validate() {\r\n    for (var _iterator3 = fns, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\r\n      var _ref3;\r\n\r\n      if (_isArray3) {\r\n        if (_i3 >= _iterator3.length) break;\r\n        _ref3 = _iterator3[_i3++];\r\n      } else {\r\n        _i3 = _iterator3.next();\r\n        if (_i3.done) break;\r\n        _ref3 = _i3.value;\r\n      }\r\n\r\n      var fn = _ref3;\r\n\r\n      fn.apply(undefined, arguments);\r\n    }\r\n  }\r\n  validate.chainOf = fns;\r\n  return validate;\r\n}\r\n\r\nfunction defineType(type) {\r\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n  var inherits = opts.inherits && store[opts.inherits] || {};\r\n\r\n  opts.fields = opts.fields || inherits.fields || {};\r\n  opts.visitor = opts.visitor || inherits.visitor || [];\r\n  opts.aliases = opts.aliases || inherits.aliases || [];\r\n  opts.builder = opts.builder || inherits.builder || opts.visitor || [];\r\n\r\n  if (opts.deprecatedAlias) {\r\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\r\n  }\r\n\r\n  for (var _iterator4 = opts.visitor.concat(opts.builder), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\r\n    var _ref4;\r\n\r\n    if (_isArray4) {\r\n      if (_i4 >= _iterator4.length) break;\r\n      _ref4 = _iterator4[_i4++];\r\n    } else {\r\n      _i4 = _iterator4.next();\r\n      if (_i4.done) break;\r\n      _ref4 = _i4.value;\r\n    }\r\n\r\n    var _key5 = _ref4;\r\n\r\n    opts.fields[_key5] = opts.fields[_key5] || {};\r\n  }\r\n\r\n  for (var key in opts.fields) {\r\n    var field = opts.fields[key];\r\n\r\n    if (opts.builder.indexOf(key) === -1) {\r\n      field.optional = true;\r\n    }\r\n    if (field.default === undefined) {\r\n      field.default = null;\r\n    } else if (!field.validate) {\r\n      field.validate = assertValueType(getType(field.default));\r\n    }\r\n  }\r\n\r\n  VISITOR_KEYS[type] = opts.visitor;\r\n  BUILDER_KEYS[type] = opts.builder;\r\n  NODE_FIELDS[type] = opts.fields;\r\n  ALIAS_KEYS[type] = opts.aliases;\r\n\r\n  store[type] = opts;\r\n}\r\n\r\nvar store = {};","\"use strict\";\r\n\r\nrequire(\"./index\");\r\n\r\nrequire(\"./core\");\r\n\r\nrequire(\"./es2015\");\r\n\r\nrequire(\"./flow\");\r\n\r\nrequire(\"./jsx\");\r\n\r\nrequire(\"./misc\");\r\n\r\nrequire(\"./experimental\");","\"use strict\";\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar _index2 = _interopRequireDefault(_index);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n(0, _index2.default)(\"JSXAttribute\", {\r\n  visitor: [\"name\", \"value\"],\r\n  aliases: [\"JSX\", \"Immutable\"],\r\n  fields: {\r\n    name: {\r\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\r\n    },\r\n    value: {\r\n      optional: true,\r\n      validate: (0, _index.assertNodeType)(\"JSXElement\", \"StringLiteral\", \"JSXExpressionContainer\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXClosingElement\", {\r\n  visitor: [\"name\"],\r\n  aliases: [\"JSX\", \"Immutable\"],\r\n  fields: {\r\n    name: {\r\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXElement\", {\r\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\r\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\r\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\r\n  fields: {\r\n    openingElement: {\r\n      validate: (0, _index.assertNodeType)(\"JSXOpeningElement\")\r\n    },\r\n    closingElement: {\r\n      optional: true,\r\n      validate: (0, _index.assertNodeType)(\"JSXClosingElement\")\r\n    },\r\n    children: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXEmptyExpression\", {\r\n  aliases: [\"JSX\", \"Expression\"]\r\n});\r\n\r\n(0, _index2.default)(\"JSXExpressionContainer\", {\r\n  visitor: [\"expression\"],\r\n  aliases: [\"JSX\", \"Immutable\"],\r\n  fields: {\r\n    expression: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXSpreadChild\", {\r\n  visitor: [\"expression\"],\r\n  aliases: [\"JSX\", \"Immutable\"],\r\n  fields: {\r\n    expression: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXIdentifier\", {\r\n  builder: [\"name\"],\r\n  aliases: [\"JSX\", \"Expression\"],\r\n  fields: {\r\n    name: {\r\n      validate: (0, _index.assertValueType)(\"string\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXMemberExpression\", {\r\n  visitor: [\"object\", \"property\"],\r\n  aliases: [\"JSX\", \"Expression\"],\r\n  fields: {\r\n    object: {\r\n      validate: (0, _index.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\r\n    },\r\n    property: {\r\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXNamespacedName\", {\r\n  visitor: [\"namespace\", \"name\"],\r\n  aliases: [\"JSX\"],\r\n  fields: {\r\n    namespace: {\r\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\r\n    },\r\n    name: {\r\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXOpeningElement\", {\r\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\r\n  visitor: [\"name\", \"attributes\"],\r\n  aliases: [\"JSX\", \"Immutable\"],\r\n  fields: {\r\n    name: {\r\n      validate: (0, _index.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\r\n    },\r\n    selfClosing: {\r\n      default: false,\r\n      validate: (0, _index.assertValueType)(\"boolean\")\r\n    },\r\n    attributes: {\r\n      validate: (0, _index.chain)((0, _index.assertValueType)(\"array\"), (0, _index.assertEach)((0, _index.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXSpreadAttribute\", {\r\n  visitor: [\"argument\"],\r\n  aliases: [\"JSX\"],\r\n  fields: {\r\n    argument: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});\r\n\r\n(0, _index2.default)(\"JSXText\", {\r\n  aliases: [\"JSX\", \"Immutable\"],\r\n  builder: [\"value\"],\r\n  fields: {\r\n    value: {\r\n      validate: (0, _index.assertValueType)(\"string\")\r\n    }\r\n  }\r\n});","\"use strict\";\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar _index2 = _interopRequireDefault(_index);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n(0, _index2.default)(\"Noop\", {\r\n  visitor: []\r\n});\r\n\r\n(0, _index2.default)(\"ParenthesizedExpression\", {\r\n  visitor: [\"expression\"],\r\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\r\n  fields: {\r\n    expression: {\r\n      validate: (0, _index.assertNodeType)(\"Expression\")\r\n    }\r\n  }\r\n});","\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports.createUnionTypeAnnotation = createUnionTypeAnnotation;\r\nexports.removeTypeDuplicates = removeTypeDuplicates;\r\nexports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar t = _interopRequireWildcard(_index);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\nfunction createUnionTypeAnnotation(types) {\r\n  var flattened = removeTypeDuplicates(types);\r\n\r\n  if (flattened.length === 1) {\r\n    return flattened[0];\r\n  } else {\r\n    return t.unionTypeAnnotation(flattened);\r\n  }\r\n}\r\n\r\nfunction removeTypeDuplicates(nodes) {\r\n  var generics = {};\r\n  var bases = {};\r\n\r\n  var typeGroups = [];\r\n\r\n  var types = [];\r\n\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    var node = nodes[i];\r\n    if (!node) continue;\r\n\r\n    if (types.indexOf(node) >= 0) {\r\n      continue;\r\n    }\r\n\r\n    if (t.isAnyTypeAnnotation(node)) {\r\n      return [node];\r\n    }\r\n\r\n    if (t.isFlowBaseAnnotation(node)) {\r\n      bases[node.type] = node;\r\n      continue;\r\n    }\r\n\r\n    if (t.isUnionTypeAnnotation(node)) {\r\n      if (typeGroups.indexOf(node.types) < 0) {\r\n        nodes = nodes.concat(node.types);\r\n        typeGroups.push(node.types);\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (t.isGenericTypeAnnotation(node)) {\r\n      var name = node.id.name;\r\n\r\n      if (generics[name]) {\r\n        var existing = generics[name];\r\n        if (existing.typeParameters) {\r\n          if (node.typeParameters) {\r\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\r\n          }\r\n        } else {\r\n          existing = node.typeParameters;\r\n        }\r\n      } else {\r\n        generics[name] = node;\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    types.push(node);\r\n  }\r\n\r\n  for (var type in bases) {\r\n    types.push(bases[type]);\r\n  }\r\n\r\n  for (var _name in generics) {\r\n    types.push(generics[_name]);\r\n  }\r\n\r\n  return types;\r\n}\r\n\r\nfunction createTypeAnnotationBasedOnTypeof(type) {\r\n  if (type === \"string\") {\r\n    return t.stringTypeAnnotation();\r\n  } else if (type === \"number\") {\r\n    return t.numberTypeAnnotation();\r\n  } else if (type === \"undefined\") {\r\n    return t.voidTypeAnnotation();\r\n  } else if (type === \"boolean\") {\r\n    return t.booleanTypeAnnotation();\r\n  } else if (type === \"function\") {\r\n    return t.genericTypeAnnotation(t.identifier(\"Function\"));\r\n  } else if (type === \"object\") {\r\n    return t.genericTypeAnnotation(t.identifier(\"Object\"));\r\n  } else if (type === \"symbol\") {\r\n    return t.genericTypeAnnotation(t.identifier(\"Symbol\"));\r\n  } else {\r\n    throw new Error(\"Invalid typeof value\");\r\n  }\r\n}","\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports.createTypeAnnotationBasedOnTypeof = exports.removeTypeDuplicates = exports.createUnionTypeAnnotation = exports.valueToNode = exports.toBlock = exports.toExpression = exports.toStatement = exports.toBindingIdentifierName = exports.toIdentifier = exports.toKeyAlias = exports.toSequenceExpression = exports.toComputedKey = exports.isNodesEquivalent = exports.isImmutable = exports.isScope = exports.isSpecifierDefault = exports.isVar = exports.isBlockScoped = exports.isLet = exports.isValidIdentifier = exports.isReferenced = exports.isBinding = exports.getOuterBindingIdentifiers = exports.getBindingIdentifiers = exports.TYPES = exports.react = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;\r\n\r\nvar _getOwnPropertySymbols = require(\"babel-runtime/core-js/object/get-own-property-symbols\");\r\n\r\nvar _getOwnPropertySymbols2 = _interopRequireDefault(_getOwnPropertySymbols);\r\n\r\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\r\n\r\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\r\n\r\nvar _keys = require(\"babel-runtime/core-js/object/keys\");\r\n\r\nvar _keys2 = _interopRequireDefault(_keys);\r\n\r\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\r\n\r\nvar _stringify2 = _interopRequireDefault(_stringify);\r\n\r\nvar _constants = require(\"./constants\");\r\n\r\nObject.defineProperty(exports, \"STATEMENT_OR_BLOCK_KEYS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.STATEMENT_OR_BLOCK_KEYS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"FLATTENABLE_KEYS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.FLATTENABLE_KEYS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"FOR_INIT_KEYS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.FOR_INIT_KEYS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"COMMENT_KEYS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.COMMENT_KEYS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"LOGICAL_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.LOGICAL_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"UPDATE_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.UPDATE_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"BOOLEAN_NUMBER_BINARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.BOOLEAN_NUMBER_BINARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"EQUALITY_BINARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.EQUALITY_BINARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"COMPARISON_BINARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.COMPARISON_BINARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"BOOLEAN_BINARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.BOOLEAN_BINARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"NUMBER_BINARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.NUMBER_BINARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"BINARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.BINARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"BOOLEAN_UNARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.BOOLEAN_UNARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"NUMBER_UNARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.NUMBER_UNARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"STRING_UNARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.STRING_UNARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"UNARY_OPERATORS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.UNARY_OPERATORS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"INHERIT_KEYS\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.INHERIT_KEYS;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"BLOCK_SCOPED_SYMBOL\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.BLOCK_SCOPED_SYMBOL;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"NOT_LOCAL_BINDING\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _constants.NOT_LOCAL_BINDING;\r\n  }\r\n});\r\nexports.is = is;\r\nexports.isType = isType;\r\nexports.validate = validate;\r\nexports.shallowEqual = shallowEqual;\r\nexports.appendToMemberExpression = appendToMemberExpression;\r\nexports.prependToMemberExpression = prependToMemberExpression;\r\nexports.ensureBlock = ensureBlock;\r\nexports.clone = clone;\r\nexports.cloneWithoutLoc = cloneWithoutLoc;\r\nexports.cloneDeep = cloneDeep;\r\nexports.buildMatchMemberExpression = buildMatchMemberExpression;\r\nexports.removeComments = removeComments;\r\nexports.inheritsComments = inheritsComments;\r\nexports.inheritTrailingComments = inheritTrailingComments;\r\nexports.inheritLeadingComments = inheritLeadingComments;\r\nexports.inheritInnerComments = inheritInnerComments;\r\nexports.inherits = inherits;\r\nexports.assertNode = assertNode;\r\nexports.isNode = isNode;\r\nexports.traverseFast = traverseFast;\r\nexports.removeProperties = removeProperties;\r\nexports.removePropertiesDeep = removePropertiesDeep;\r\n\r\nvar _retrievers = require(\"./retrievers\");\r\n\r\nObject.defineProperty(exports, \"getBindingIdentifiers\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _retrievers.getBindingIdentifiers;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"getOuterBindingIdentifiers\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _retrievers.getOuterBindingIdentifiers;\r\n  }\r\n});\r\n\r\nvar _validators = require(\"./validators\");\r\n\r\nObject.defineProperty(exports, \"isBinding\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isBinding;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isReferenced\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isReferenced;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isValidIdentifier\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isValidIdentifier;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isLet\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isLet;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isBlockScoped\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isBlockScoped;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isVar\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isVar;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isSpecifierDefault\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isSpecifierDefault;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isScope\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isScope;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isImmutable\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isImmutable;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"isNodesEquivalent\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _validators.isNodesEquivalent;\r\n  }\r\n});\r\n\r\nvar _converters = require(\"./converters\");\r\n\r\nObject.defineProperty(exports, \"toComputedKey\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.toComputedKey;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"toSequenceExpression\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.toSequenceExpression;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"toKeyAlias\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.toKeyAlias;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"toIdentifier\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.toIdentifier;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"toBindingIdentifierName\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.toBindingIdentifierName;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"toStatement\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.toStatement;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"toExpression\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.toExpression;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"toBlock\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.toBlock;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"valueToNode\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _converters.valueToNode;\r\n  }\r\n});\r\n\r\nvar _flow = require(\"./flow\");\r\n\r\nObject.defineProperty(exports, \"createUnionTypeAnnotation\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _flow.createUnionTypeAnnotation;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"removeTypeDuplicates\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _flow.removeTypeDuplicates;\r\n  }\r\n});\r\nObject.defineProperty(exports, \"createTypeAnnotationBasedOnTypeof\", {\r\n  enumerable: true,\r\n  get: function get() {\r\n    return _flow.createTypeAnnotationBasedOnTypeof;\r\n  }\r\n});\r\n\r\nvar _toFastProperties = require(\"to-fast-properties\");\r\n\r\nvar _toFastProperties2 = _interopRequireDefault(_toFastProperties);\r\n\r\nvar _clone = require(\"lodash/clone\");\r\n\r\nvar _clone2 = _interopRequireDefault(_clone);\r\n\r\nvar _uniq = require(\"lodash/uniq\");\r\n\r\nvar _uniq2 = _interopRequireDefault(_uniq);\r\n\r\nrequire(\"./definitions/init\");\r\n\r\nvar _definitions = require(\"./definitions\");\r\n\r\nvar _react2 = require(\"./react\");\r\n\r\nvar _react = _interopRequireWildcard(_react2);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar t = exports;\r\n\r\nfunction registerType(type) {\r\n  var is = t[\"is\" + type];\r\n  if (!is) {\r\n    is = t[\"is\" + type] = function (node, opts) {\r\n      return t.is(type, node, opts);\r\n    };\r\n  }\r\n\r\n  t[\"assert\" + type] = function (node, opts) {\r\n    opts = opts || {};\r\n    if (!is(node, opts)) {\r\n      throw new Error(\"Expected type \" + (0, _stringify2.default)(type) + \" with option \" + (0, _stringify2.default)(opts));\r\n    }\r\n  };\r\n}\r\n\r\nexports.VISITOR_KEYS = _definitions.VISITOR_KEYS;\r\nexports.ALIAS_KEYS = _definitions.ALIAS_KEYS;\r\nexports.NODE_FIELDS = _definitions.NODE_FIELDS;\r\nexports.BUILDER_KEYS = _definitions.BUILDER_KEYS;\r\nexports.DEPRECATED_KEYS = _definitions.DEPRECATED_KEYS;\r\nexports.react = _react;\r\n\r\n\r\nfor (var type in t.VISITOR_KEYS) {\r\n  registerType(type);\r\n}\r\n\r\nt.FLIPPED_ALIAS_KEYS = {};\r\n\r\n(0, _keys2.default)(t.ALIAS_KEYS).forEach(function (type) {\r\n  t.ALIAS_KEYS[type].forEach(function (alias) {\r\n    var types = t.FLIPPED_ALIAS_KEYS[alias] = t.FLIPPED_ALIAS_KEYS[alias] || [];\r\n    types.push(type);\r\n  });\r\n});\r\n\r\n(0, _keys2.default)(t.FLIPPED_ALIAS_KEYS).forEach(function (type) {\r\n  t[type.toUpperCase() + \"_TYPES\"] = t.FLIPPED_ALIAS_KEYS[type];\r\n  registerType(type);\r\n});\r\n\r\nvar TYPES = exports.TYPES = (0, _keys2.default)(t.VISITOR_KEYS).concat((0, _keys2.default)(t.FLIPPED_ALIAS_KEYS)).concat((0, _keys2.default)(t.DEPRECATED_KEYS));\r\n\r\nfunction is(type, node, opts) {\r\n  if (!node) return false;\r\n\r\n  var matches = isType(node.type, type);\r\n  if (!matches) return false;\r\n\r\n  if (typeof opts === \"undefined\") {\r\n    return true;\r\n  } else {\r\n    return t.shallowEqual(node, opts);\r\n  }\r\n}\r\n\r\nfunction isType(nodeType, targetType) {\r\n  if (nodeType === targetType) return true;\r\n\r\n  if (t.ALIAS_KEYS[targetType]) return false;\r\n\r\n  var aliases = t.FLIPPED_ALIAS_KEYS[targetType];\r\n  if (aliases) {\r\n    if (aliases[0] === nodeType) return true;\r\n\r\n    for (var _iterator = aliases, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\r\n      var _ref;\r\n\r\n      if (_isArray) {\r\n        if (_i >= _iterator.length) break;\r\n        _ref = _iterator[_i++];\r\n      } else {\r\n        _i = _iterator.next();\r\n        if (_i.done) break;\r\n        _ref = _i.value;\r\n      }\r\n\r\n      var alias = _ref;\r\n\r\n      if (nodeType === alias) return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n(0, _keys2.default)(t.BUILDER_KEYS).forEach(function (type) {\r\n  var keys = t.BUILDER_KEYS[type];\r\n\r\n  function builder() {\r\n    if (arguments.length > keys.length) {\r\n      throw new Error(\"t.\" + type + \": Too many arguments passed. Received \" + arguments.length + \" but can receive \" + (\"no more than \" + keys.length));\r\n    }\r\n\r\n    var node = {};\r\n    node.type = type;\r\n\r\n    var i = 0;\r\n\r\n    for (var _iterator2 = keys, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\r\n      var _ref2;\r\n\r\n      if (_isArray2) {\r\n        if (_i2 >= _iterator2.length) break;\r\n        _ref2 = _iterator2[_i2++];\r\n      } else {\r\n        _i2 = _iterator2.next();\r\n        if (_i2.done) break;\r\n        _ref2 = _i2.value;\r\n      }\r\n\r\n      var _key = _ref2;\r\n\r\n      var field = t.NODE_FIELDS[type][_key];\r\n\r\n      var arg = arguments[i++];\r\n      if (arg === undefined) arg = (0, _clone2.default)(field.default);\r\n\r\n      node[_key] = arg;\r\n    }\r\n\r\n    for (var key in node) {\r\n      validate(node, key, node[key]);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  t[type] = builder;\r\n  t[type[0].toLowerCase() + type.slice(1)] = builder;\r\n});\r\n\r\nvar _loop = function _loop(_type) {\r\n  var newType = t.DEPRECATED_KEYS[_type];\r\n\r\n  function proxy(fn) {\r\n    return function () {\r\n      console.trace(\"The node type \" + _type + \" has been renamed to \" + newType);\r\n      return fn.apply(this, arguments);\r\n    };\r\n  }\r\n\r\n  t[_type] = t[_type[0].toLowerCase() + _type.slice(1)] = proxy(t[newType]);\r\n  t[\"is\" + _type] = proxy(t[\"is\" + newType]);\r\n  t[\"assert\" + _type] = proxy(t[\"assert\" + newType]);\r\n};\r\n\r\nfor (var _type in t.DEPRECATED_KEYS) {\r\n  _loop(_type);\r\n}\r\n\r\nfunction validate(node, key, val) {\r\n  if (!node) return;\r\n\r\n  var fields = t.NODE_FIELDS[node.type];\r\n  if (!fields) return;\r\n\r\n  var field = fields[key];\r\n  if (!field || !field.validate) return;\r\n  if (field.optional && val == null) return;\r\n\r\n  field.validate(node, key, val);\r\n}\r\n\r\nfunction shallowEqual(actual, expected) {\r\n  var keys = (0, _keys2.default)(expected);\r\n\r\n  for (var _iterator3 = keys, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\r\n    var _ref3;\r\n\r\n    if (_isArray3) {\r\n      if (_i3 >= _iterator3.length) break;\r\n      _ref3 = _iterator3[_i3++];\r\n    } else {\r\n      _i3 = _iterator3.next();\r\n      if (_i3.done) break;\r\n      _ref3 = _i3.value;\r\n    }\r\n\r\n    var key = _ref3;\r\n\r\n    if (actual[key] !== expected[key]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction appendToMemberExpression(member, append, computed) {\r\n  member.object = t.memberExpression(member.object, member.property, member.computed);\r\n  member.property = append;\r\n  member.computed = !!computed;\r\n  return member;\r\n}\r\n\r\nfunction prependToMemberExpression(member, prepend) {\r\n  member.object = t.memberExpression(prepend, member.object);\r\n  return member;\r\n}\r\n\r\nfunction ensureBlock(node) {\r\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"body\";\r\n\r\n  return node[key] = t.toBlock(node[key], node);\r\n}\r\n\r\nfunction clone(node) {\r\n  if (!node) return node;\r\n  var newNode = {};\r\n  for (var key in node) {\r\n    if (key[0] === \"_\") continue;\r\n    newNode[key] = node[key];\r\n  }\r\n  return newNode;\r\n}\r\n\r\nfunction cloneWithoutLoc(node) {\r\n  var newNode = clone(node);\r\n  delete newNode.loc;\r\n  return newNode;\r\n}\r\n\r\nfunction cloneDeep(node) {\r\n  if (!node) return node;\r\n  var newNode = {};\r\n\r\n  for (var key in node) {\r\n    if (key[0] === \"_\") continue;\r\n\r\n    var val = node[key];\r\n\r\n    if (val) {\r\n      if (val.type) {\r\n        val = t.cloneDeep(val);\r\n      } else if (Array.isArray(val)) {\r\n        val = val.map(t.cloneDeep);\r\n      }\r\n    }\r\n\r\n    newNode[key] = val;\r\n  }\r\n\r\n  return newNode;\r\n}\r\n\r\nfunction buildMatchMemberExpression(match, allowPartial) {\r\n  var parts = match.split(\".\");\r\n\r\n  return function (member) {\r\n    if (!t.isMemberExpression(member)) return false;\r\n\r\n    var search = [member];\r\n    var i = 0;\r\n\r\n    while (search.length) {\r\n      var node = search.shift();\r\n\r\n      if (allowPartial && i === parts.length) {\r\n        return true;\r\n      }\r\n\r\n      if (t.isIdentifier(node)) {\r\n        if (parts[i] !== node.name) return false;\r\n      } else if (t.isStringLiteral(node)) {\r\n        if (parts[i] !== node.value) return false;\r\n      } else if (t.isMemberExpression(node)) {\r\n        if (node.computed && !t.isStringLiteral(node.property)) {\r\n          return false;\r\n        } else {\r\n          search.push(node.object);\r\n          search.push(node.property);\r\n          continue;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n      if (++i > parts.length) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n}\r\n\r\nfunction removeComments(node) {\r\n  for (var _iterator4 = t.COMMENT_KEYS, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\r\n    var _ref4;\r\n\r\n    if (_isArray4) {\r\n      if (_i4 >= _iterator4.length) break;\r\n      _ref4 = _iterator4[_i4++];\r\n    } else {\r\n      _i4 = _iterator4.next();\r\n      if (_i4.done) break;\r\n      _ref4 = _i4.value;\r\n    }\r\n\r\n    var key = _ref4;\r\n\r\n    delete node[key];\r\n  }\r\n  return node;\r\n}\r\n\r\nfunction inheritsComments(child, parent) {\r\n  inheritTrailingComments(child, parent);\r\n  inheritLeadingComments(child, parent);\r\n  inheritInnerComments(child, parent);\r\n  return child;\r\n}\r\n\r\nfunction inheritTrailingComments(child, parent) {\r\n  _inheritComments(\"trailingComments\", child, parent);\r\n}\r\n\r\nfunction inheritLeadingComments(child, parent) {\r\n  _inheritComments(\"leadingComments\", child, parent);\r\n}\r\n\r\nfunction inheritInnerComments(child, parent) {\r\n  _inheritComments(\"innerComments\", child, parent);\r\n}\r\n\r\nfunction _inheritComments(key, child, parent) {\r\n  if (child && parent) {\r\n    child[key] = (0, _uniq2.default)([].concat(child[key], parent[key]).filter(Boolean));\r\n  }\r\n}\r\n\r\nfunction inherits(child, parent) {\r\n  if (!child || !parent) return child;\r\n\r\n  for (var _iterator5 = t.INHERIT_KEYS.optional, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\r\n    var _ref5;\r\n\r\n    if (_isArray5) {\r\n      if (_i5 >= _iterator5.length) break;\r\n      _ref5 = _iterator5[_i5++];\r\n    } else {\r\n      _i5 = _iterator5.next();\r\n      if (_i5.done) break;\r\n      _ref5 = _i5.value;\r\n    }\r\n\r\n    var _key2 = _ref5;\r\n\r\n    if (child[_key2] == null) {\r\n      child[_key2] = parent[_key2];\r\n    }\r\n  }\r\n\r\n  for (var key in parent) {\r\n    if (key[0] === \"_\") child[key] = parent[key];\r\n  }\r\n\r\n  for (var _iterator6 = t.INHERIT_KEYS.force, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {\r\n    var _ref6;\r\n\r\n    if (_isArray6) {\r\n      if (_i6 >= _iterator6.length) break;\r\n      _ref6 = _iterator6[_i6++];\r\n    } else {\r\n      _i6 = _iterator6.next();\r\n      if (_i6.done) break;\r\n      _ref6 = _i6.value;\r\n    }\r\n\r\n    var _key3 = _ref6;\r\n\r\n    child[_key3] = parent[_key3];\r\n  }\r\n\r\n  t.inheritsComments(child, parent);\r\n\r\n  return child;\r\n}\r\n\r\nfunction assertNode(node) {\r\n  if (!isNode(node)) {\r\n    throw new TypeError(\"Not a valid node \" + (node && node.type));\r\n  }\r\n}\r\n\r\nfunction isNode(node) {\r\n  return !!(node && _definitions.VISITOR_KEYS[node.type]);\r\n}\r\n\r\n(0, _toFastProperties2.default)(t);\r\n(0, _toFastProperties2.default)(t.VISITOR_KEYS);\r\n\r\nfunction traverseFast(node, enter, opts) {\r\n  if (!node) return;\r\n\r\n  var keys = t.VISITOR_KEYS[node.type];\r\n  if (!keys) return;\r\n\r\n  opts = opts || {};\r\n  enter(node, opts);\r\n\r\n  for (var _iterator7 = keys, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {\r\n    var _ref7;\r\n\r\n    if (_isArray7) {\r\n      if (_i7 >= _iterator7.length) break;\r\n      _ref7 = _iterator7[_i7++];\r\n    } else {\r\n      _i7 = _iterator7.next();\r\n      if (_i7.done) break;\r\n      _ref7 = _i7.value;\r\n    }\r\n\r\n    var key = _ref7;\r\n\r\n    var subNode = node[key];\r\n\r\n    if (Array.isArray(subNode)) {\r\n      for (var _iterator8 = subNode, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : (0, _getIterator3.default)(_iterator8);;) {\r\n        var _ref8;\r\n\r\n        if (_isArray8) {\r\n          if (_i8 >= _iterator8.length) break;\r\n          _ref8 = _iterator8[_i8++];\r\n        } else {\r\n          _i8 = _iterator8.next();\r\n          if (_i8.done) break;\r\n          _ref8 = _i8.value;\r\n        }\r\n\r\n        var _node = _ref8;\r\n\r\n        traverseFast(_node, enter, opts);\r\n      }\r\n    } else {\r\n      traverseFast(subNode, enter, opts);\r\n    }\r\n  }\r\n}\r\n\r\nvar CLEAR_KEYS = [\"tokens\", \"start\", \"end\", \"loc\", \"raw\", \"rawValue\"];\r\n\r\nvar CLEAR_KEYS_PLUS_COMMENTS = t.COMMENT_KEYS.concat([\"comments\"]).concat(CLEAR_KEYS);\r\n\r\nfunction removeProperties(node, opts) {\r\n  opts = opts || {};\r\n  var map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\r\n  for (var _iterator9 = map, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : (0, _getIterator3.default)(_iterator9);;) {\r\n    var _ref9;\r\n\r\n    if (_isArray9) {\r\n      if (_i9 >= _iterator9.length) break;\r\n      _ref9 = _iterator9[_i9++];\r\n    } else {\r\n      _i9 = _iterator9.next();\r\n      if (_i9.done) break;\r\n      _ref9 = _i9.value;\r\n    }\r\n\r\n    var _key4 = _ref9;\r\n\r\n    if (node[_key4] != null) node[_key4] = undefined;\r\n  }\r\n\r\n  for (var key in node) {\r\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\r\n  }\r\n\r\n  var syms = (0, _getOwnPropertySymbols2.default)(node);\r\n  for (var _iterator10 = syms, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : (0, _getIterator3.default)(_iterator10);;) {\r\n    var _ref10;\r\n\r\n    if (_isArray10) {\r\n      if (_i10 >= _iterator10.length) break;\r\n      _ref10 = _iterator10[_i10++];\r\n    } else {\r\n      _i10 = _iterator10.next();\r\n      if (_i10.done) break;\r\n      _ref10 = _i10.value;\r\n    }\r\n\r\n    var sym = _ref10;\r\n\r\n    node[sym] = null;\r\n  }\r\n}\r\n\r\nfunction removePropertiesDeep(tree, opts) {\r\n  traverseFast(tree, removeProperties, opts);\r\n  return tree;\r\n}","\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports.isReactComponent = undefined;\r\nexports.isCompatTag = isCompatTag;\r\nexports.buildChildren = buildChildren;\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar t = _interopRequireWildcard(_index);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\nvar isReactComponent = exports.isReactComponent = t.buildMatchMemberExpression(\"React.Component\");\r\n\r\nfunction isCompatTag(tagName) {\r\n  return !!tagName && /^[a-z]|\\-/.test(tagName);\r\n}\r\n\r\nfunction cleanJSXElementLiteralChild(child, args) {\r\n  var lines = child.value.split(/\\r\\n|\\n|\\r/);\r\n\r\n  var lastNonEmptyLine = 0;\r\n\r\n  for (var i = 0; i < lines.length; i++) {\r\n    if (lines[i].match(/[^ \\t]/)) {\r\n      lastNonEmptyLine = i;\r\n    }\r\n  }\r\n\r\n  var str = \"\";\r\n\r\n  for (var _i = 0; _i < lines.length; _i++) {\r\n    var line = lines[_i];\r\n\r\n    var isFirstLine = _i === 0;\r\n    var isLastLine = _i === lines.length - 1;\r\n    var isLastNonEmptyLine = _i === lastNonEmptyLine;\r\n\r\n    var trimmedLine = line.replace(/\\t/g, \" \");\r\n\r\n    if (!isFirstLine) {\r\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\r\n    }\r\n\r\n    if (!isLastLine) {\r\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\r\n    }\r\n\r\n    if (trimmedLine) {\r\n      if (!isLastNonEmptyLine) {\r\n        trimmedLine += \" \";\r\n      }\r\n\r\n      str += trimmedLine;\r\n    }\r\n  }\r\n\r\n  if (str) args.push(t.stringLiteral(str));\r\n}\r\n\r\nfunction buildChildren(node) {\r\n  var elems = [];\r\n\r\n  for (var i = 0; i < node.children.length; i++) {\r\n    var child = node.children[i];\r\n\r\n    if (t.isJSXText(child)) {\r\n      cleanJSXElementLiteralChild(child, elems);\r\n      continue;\r\n    }\r\n\r\n    if (t.isJSXExpressionContainer(child)) child = child.expression;\r\n    if (t.isJSXEmptyExpression(child)) continue;\r\n\r\n    elems.push(child);\r\n  }\r\n\r\n  return elems;\r\n}","\"use strict\";\r\n\r\nexports.__esModule = true;\r\n\r\nvar _create = require(\"babel-runtime/core-js/object/create\");\r\n\r\nvar _create2 = _interopRequireDefault(_create);\r\n\r\nexports.getBindingIdentifiers = getBindingIdentifiers;\r\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar t = _interopRequireWildcard(_index);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction getBindingIdentifiers(node, duplicates, outerOnly) {\r\n  var search = [].concat(node);\r\n  var ids = (0, _create2.default)(null);\r\n\r\n  while (search.length) {\r\n    var id = search.shift();\r\n    if (!id) continue;\r\n\r\n    var keys = t.getBindingIdentifiers.keys[id.type];\r\n\r\n    if (t.isIdentifier(id)) {\r\n      if (duplicates) {\r\n        var _ids = ids[id.name] = ids[id.name] || [];\r\n        _ids.push(id);\r\n      } else {\r\n        ids[id.name] = id;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (t.isExportDeclaration(id)) {\r\n      if (t.isDeclaration(id.declaration)) {\r\n        search.push(id.declaration);\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (outerOnly) {\r\n      if (t.isFunctionDeclaration(id)) {\r\n        search.push(id.id);\r\n        continue;\r\n      }\r\n\r\n      if (t.isFunctionExpression(id)) {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (keys) {\r\n      for (var i = 0; i < keys.length; i++) {\r\n        var key = keys[i];\r\n        if (id[key]) {\r\n          search = search.concat(id[key]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\ngetBindingIdentifiers.keys = {\r\n  DeclareClass: [\"id\"],\r\n  DeclareFunction: [\"id\"],\r\n  DeclareModule: [\"id\"],\r\n  DeclareVariable: [\"id\"],\r\n  InterfaceDeclaration: [\"id\"],\r\n  TypeAlias: [\"id\"],\r\n  OpaqueType: [\"id\"],\r\n\r\n  CatchClause: [\"param\"],\r\n  LabeledStatement: [\"label\"],\r\n  UnaryExpression: [\"argument\"],\r\n  AssignmentExpression: [\"left\"],\r\n\r\n  ImportSpecifier: [\"local\"],\r\n  ImportNamespaceSpecifier: [\"local\"],\r\n  ImportDefaultSpecifier: [\"local\"],\r\n  ImportDeclaration: [\"specifiers\"],\r\n\r\n  ExportSpecifier: [\"exported\"],\r\n  ExportNamespaceSpecifier: [\"exported\"],\r\n  ExportDefaultSpecifier: [\"exported\"],\r\n\r\n  FunctionDeclaration: [\"id\", \"params\"],\r\n  FunctionExpression: [\"id\", \"params\"],\r\n\r\n  ClassDeclaration: [\"id\"],\r\n  ClassExpression: [\"id\"],\r\n\r\n  RestElement: [\"argument\"],\r\n  UpdateExpression: [\"argument\"],\r\n\r\n  RestProperty: [\"argument\"],\r\n  ObjectProperty: [\"value\"],\r\n\r\n  AssignmentPattern: [\"left\"],\r\n  ArrayPattern: [\"elements\"],\r\n  ObjectPattern: [\"properties\"],\r\n\r\n  VariableDeclaration: [\"declarations\"],\r\n  VariableDeclarator: [\"id\"]\r\n};\r\n\r\nfunction getOuterBindingIdentifiers(node, duplicates) {\r\n  return getBindingIdentifiers(node, duplicates, true);\r\n}","\"use strict\";\r\n\r\nexports.__esModule = true;\r\n\r\nvar _keys = require(\"babel-runtime/core-js/object/keys\");\r\n\r\nvar _keys2 = _interopRequireDefault(_keys);\r\n\r\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\r\n\r\nvar _typeof3 = _interopRequireDefault(_typeof2);\r\n\r\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\r\n\r\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\r\n\r\nexports.isBinding = isBinding;\r\nexports.isReferenced = isReferenced;\r\nexports.isValidIdentifier = isValidIdentifier;\r\nexports.isLet = isLet;\r\nexports.isBlockScoped = isBlockScoped;\r\nexports.isVar = isVar;\r\nexports.isSpecifierDefault = isSpecifierDefault;\r\nexports.isScope = isScope;\r\nexports.isImmutable = isImmutable;\r\nexports.isNodesEquivalent = isNodesEquivalent;\r\n\r\nvar _retrievers = require(\"./retrievers\");\r\n\r\nvar _esutils = require(\"esutils\");\r\n\r\nvar _esutils2 = _interopRequireDefault(_esutils);\r\n\r\nvar _index = require(\"./index\");\r\n\r\nvar t = _interopRequireWildcard(_index);\r\n\r\nvar _constants = require(\"./constants\");\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isBinding(node, parent) {\r\n  var keys = _retrievers.getBindingIdentifiers.keys[parent.type];\r\n  if (keys) {\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i];\r\n      var val = parent[key];\r\n      if (Array.isArray(val)) {\r\n        if (val.indexOf(node) >= 0) return true;\r\n      } else {\r\n        if (val === node) return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction isReferenced(node, parent) {\r\n  switch (parent.type) {\r\n    case \"BindExpression\":\r\n      return parent.object === node || parent.callee === node;\r\n\r\n    case \"MemberExpression\":\r\n    case \"JSXMemberExpression\":\r\n      if (parent.property === node && parent.computed) {\r\n        return true;\r\n      } else if (parent.object === node) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n    case \"MetaProperty\":\r\n      return false;\r\n\r\n    case \"ObjectProperty\":\r\n      if (parent.key === node) {\r\n        return parent.computed;\r\n      }\r\n\r\n    case \"VariableDeclarator\":\r\n      return parent.id !== node;\r\n\r\n    case \"ArrowFunctionExpression\":\r\n    case \"FunctionDeclaration\":\r\n    case \"FunctionExpression\":\r\n      for (var _iterator = parent.params, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\r\n        var _ref;\r\n\r\n        if (_isArray) {\r\n          if (_i >= _iterator.length) break;\r\n          _ref = _iterator[_i++];\r\n        } else {\r\n          _i = _iterator.next();\r\n          if (_i.done) break;\r\n          _ref = _i.value;\r\n        }\r\n\r\n        var param = _ref;\r\n\r\n        if (param === node) return false;\r\n      }\r\n\r\n      return parent.id !== node;\r\n\r\n    case \"ExportSpecifier\":\r\n      if (parent.source) {\r\n        return false;\r\n      } else {\r\n        return parent.local === node;\r\n      }\r\n\r\n    case \"ExportNamespaceSpecifier\":\r\n    case \"ExportDefaultSpecifier\":\r\n      return false;\r\n\r\n    case \"JSXAttribute\":\r\n      return parent.name !== node;\r\n\r\n    case \"ClassProperty\":\r\n      if (parent.key === node) {\r\n        return parent.computed;\r\n      } else {\r\n        return parent.value === node;\r\n      }\r\n\r\n    case \"ImportDefaultSpecifier\":\r\n    case \"ImportNamespaceSpecifier\":\r\n    case \"ImportSpecifier\":\r\n      return false;\r\n\r\n    case \"ClassDeclaration\":\r\n    case \"ClassExpression\":\r\n      return parent.id !== node;\r\n\r\n    case \"ClassMethod\":\r\n    case \"ObjectMethod\":\r\n      return parent.key === node && parent.computed;\r\n\r\n    case \"LabeledStatement\":\r\n      return false;\r\n\r\n    case \"CatchClause\":\r\n      return parent.param !== node;\r\n\r\n    case \"RestElement\":\r\n      return false;\r\n\r\n    case \"AssignmentExpression\":\r\n      return parent.right === node;\r\n\r\n    case \"AssignmentPattern\":\r\n      return parent.right === node;\r\n\r\n    case \"ObjectPattern\":\r\n    case \"ArrayPattern\":\r\n      return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction isValidIdentifier(name) {\r\n  if (typeof name !== \"string\" || _esutils2.default.keyword.isReservedWordES6(name, true)) {\r\n    return false;\r\n  } else if (name === \"await\") {\r\n    return false;\r\n  } else {\r\n    return _esutils2.default.keyword.isIdentifierNameES6(name);\r\n  }\r\n}\r\n\r\nfunction isLet(node) {\r\n  return t.isVariableDeclaration(node) && (node.kind !== \"var\" || node[_constants.BLOCK_SCOPED_SYMBOL]);\r\n}\r\n\r\nfunction isBlockScoped(node) {\r\n  return t.isFunctionDeclaration(node) || t.isClassDeclaration(node) || t.isLet(node);\r\n}\r\n\r\nfunction isVar(node) {\r\n  return t.isVariableDeclaration(node, { kind: \"var\" }) && !node[_constants.BLOCK_SCOPED_SYMBOL];\r\n}\r\n\r\nfunction isSpecifierDefault(specifier) {\r\n  return t.isImportDefaultSpecifier(specifier) || t.isIdentifier(specifier.imported || specifier.exported, { name: \"default\" });\r\n}\r\n\r\nfunction isScope(node, parent) {\r\n  if (t.isBlockStatement(node) && t.isFunction(parent, { body: node })) {\r\n    return false;\r\n  }\r\n\r\n  return t.isScopable(node);\r\n}\r\n\r\nfunction isImmutable(node) {\r\n  if (t.isType(node.type, \"Immutable\")) return true;\r\n\r\n  if (t.isIdentifier(node)) {\r\n    if (node.name === \"undefined\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction isNodesEquivalent(a, b) {\r\n  if ((typeof a === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(a)) !== \"object\" || (typeof a === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(a)) !== \"object\" || a == null || b == null) {\r\n    return a === b;\r\n  }\r\n\r\n  if (a.type !== b.type) {\r\n    return false;\r\n  }\r\n\r\n  var fields = (0, _keys2.default)(t.NODE_FIELDS[a.type] || a.type);\r\n\r\n  for (var _iterator2 = fields, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\r\n    var _ref2;\r\n\r\n    if (_isArray2) {\r\n      if (_i2 >= _iterator2.length) break;\r\n      _ref2 = _iterator2[_i2++];\r\n    } else {\r\n      _i2 = _iterator2.next();\r\n      if (_i2.done) break;\r\n      _ref2 = _i2.value;\r\n    }\r\n\r\n    var field = _ref2;\r\n\r\n    if ((0, _typeof3.default)(a[field]) !== (0, _typeof3.default)(b[field])) {\r\n      return false;\r\n    }\r\n\r\n    if (Array.isArray(a[field])) {\r\n      if (!Array.isArray(b[field])) {\r\n        return false;\r\n      }\r\n      if (a[field].length !== b[field].length) {\r\n        return false;\r\n      }\r\n\r\n      for (var i = 0; i < a[field].length; i++) {\r\n        if (!isNodesEquivalent(a[field][i], b[field][i])) {\r\n          return false;\r\n        }\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (!isNodesEquivalent(a[field], b[field])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}","'use strict';\r\nmodule.exports = function toFastproperties(o) {\r\n\tfunction Sub() {}\r\n\tSub.prototype = o;\r\n\tvar receiver = new Sub(); // create an instance\r\n\tfunction ic() { return typeof receiver.foo; } // perform access\r\n\tic(); \r\n\tic();\r\n\treturn o;\r\n\teval(\"o\" + o); // ensure no dead code elimination\r\n}\r\n","require('../../modules/es6.number.max-safe-integer');\r\nmodule.exports = 0x1fffffffffffff;\r\n","require('../../modules/es6.symbol');\r\nmodule.exports = require('../../modules/_core').Symbol['for'];\r\n","// 20.1.2.6 Number.MAX_SAFE_INTEGER\r\nvar $export = require('./_export');\r\n\r\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\r\n","/*\r\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\r\n\r\n  Redistribution and use in source and binary forms, with or without\r\n  modification, are permitted provided that the following conditions are met:\r\n\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in the\r\n      documentation and/or other materials provided with the distribution.\r\n\r\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    function isExpression(node) {\r\n        if (node == null) { return false; }\r\n        switch (node.type) {\r\n            case 'ArrayExpression':\r\n            case 'AssignmentExpression':\r\n            case 'BinaryExpression':\r\n            case 'CallExpression':\r\n            case 'ConditionalExpression':\r\n            case 'FunctionExpression':\r\n            case 'Identifier':\r\n            case 'Literal':\r\n            case 'LogicalExpression':\r\n            case 'MemberExpression':\r\n            case 'NewExpression':\r\n            case 'ObjectExpression':\r\n            case 'SequenceExpression':\r\n            case 'ThisExpression':\r\n            case 'UnaryExpression':\r\n            case 'UpdateExpression':\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function isIterationStatement(node) {\r\n        if (node == null) { return false; }\r\n        switch (node.type) {\r\n            case 'DoWhileStatement':\r\n            case 'ForInStatement':\r\n            case 'ForStatement':\r\n            case 'WhileStatement':\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function isStatement(node) {\r\n        if (node == null) { return false; }\r\n        switch (node.type) {\r\n            case 'BlockStatement':\r\n            case 'BreakStatement':\r\n            case 'ContinueStatement':\r\n            case 'DebuggerStatement':\r\n            case 'DoWhileStatement':\r\n            case 'EmptyStatement':\r\n            case 'ExpressionStatement':\r\n            case 'ForInStatement':\r\n            case 'ForStatement':\r\n            case 'IfStatement':\r\n            case 'LabeledStatement':\r\n            case 'ReturnStatement':\r\n            case 'SwitchStatement':\r\n            case 'ThrowStatement':\r\n            case 'TryStatement':\r\n            case 'VariableDeclaration':\r\n            case 'WhileStatement':\r\n            case 'WithStatement':\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function isSourceElement(node) {\r\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\r\n    }\r\n\r\n    function trailingStatement(node) {\r\n        switch (node.type) {\r\n        case 'IfStatement':\r\n            if (node.alternate != null) {\r\n                return node.alternate;\r\n            }\r\n            return node.consequent;\r\n\r\n        case 'LabeledStatement':\r\n        case 'ForStatement':\r\n        case 'ForInStatement':\r\n        case 'WhileStatement':\r\n        case 'WithStatement':\r\n            return node.body;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function isProblematicIfStatement(node) {\r\n        var current;\r\n\r\n        if (node.type !== 'IfStatement') {\r\n            return false;\r\n        }\r\n        if (node.alternate == null) {\r\n            return false;\r\n        }\r\n        current = node.consequent;\r\n        do {\r\n            if (current.type === 'IfStatement') {\r\n                if (current.alternate == null)  {\r\n                    return true;\r\n                }\r\n            }\r\n            current = trailingStatement(current);\r\n        } while (current);\r\n\r\n        return false;\r\n    }\r\n\r\n    module.exports = {\r\n        isExpression: isExpression,\r\n        isStatement: isStatement,\r\n        isIterationStatement: isIterationStatement,\r\n        isSourceElement: isSourceElement,\r\n        isProblematicIfStatement: isProblematicIfStatement,\r\n\r\n        trailingStatement: trailingStatement\r\n    };\r\n}());\r\n/* vim: set sw=4 ts=4 et tw=80 : */\r\n","/*\r\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\r\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\r\n\r\n  Redistribution and use in source and binary forms, with or without\r\n  modification, are permitted provided that the following conditions are met:\r\n\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in the\r\n      documentation and/or other materials provided with the distribution.\r\n\r\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\r\n\r\n    // See `tools/generate-identifier-regex.js`.\r\n    ES5Regex = {\r\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\r\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\r\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\r\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\r\n    };\r\n\r\n    ES6Regex = {\r\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\r\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\r\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\r\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\r\n    };\r\n\r\n    function isDecimalDigit(ch) {\r\n        return 0x30 <= ch && ch <= 0x39;  // 0..9\r\n    }\r\n\r\n    function isHexDigit(ch) {\r\n        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\r\n            0x61 <= ch && ch <= 0x66 ||     // a..f\r\n            0x41 <= ch && ch <= 0x46;       // A..F\r\n    }\r\n\r\n    function isOctalDigit(ch) {\r\n        return ch >= 0x30 && ch <= 0x37;  // 0..7\r\n    }\r\n\r\n    // 7.2 White Space\r\n\r\n    NON_ASCII_WHITESPACES = [\r\n        0x1680,\r\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\r\n        0x202F, 0x205F,\r\n        0x3000,\r\n        0xFEFF\r\n    ];\r\n\r\n    function isWhiteSpace(ch) {\r\n        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\r\n            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\r\n    }\r\n\r\n    // 7.3 Line Terminators\r\n\r\n    function isLineTerminator(ch) {\r\n        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\r\n    }\r\n\r\n    // 7.6 Identifier Names and Identifiers\r\n\r\n    function fromCodePoint(cp) {\r\n        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\r\n        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\r\n        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\r\n        return cu1 + cu2;\r\n    }\r\n\r\n    IDENTIFIER_START = new Array(0x80);\r\n    for(ch = 0; ch < 0x80; ++ch) {\r\n        IDENTIFIER_START[ch] =\r\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\r\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\r\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\r\n    }\r\n\r\n    IDENTIFIER_PART = new Array(0x80);\r\n    for(ch = 0; ch < 0x80; ++ch) {\r\n        IDENTIFIER_PART[ch] =\r\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\r\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\r\n            ch >= 0x30 && ch <= 0x39 ||  // 0..9\r\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\r\n    }\r\n\r\n    function isIdentifierStartES5(ch) {\r\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\r\n    }\r\n\r\n    function isIdentifierPartES5(ch) {\r\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\r\n    }\r\n\r\n    function isIdentifierStartES6(ch) {\r\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\r\n    }\r\n\r\n    function isIdentifierPartES6(ch) {\r\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\r\n    }\r\n\r\n    module.exports = {\r\n        isDecimalDigit: isDecimalDigit,\r\n        isHexDigit: isHexDigit,\r\n        isOctalDigit: isOctalDigit,\r\n        isWhiteSpace: isWhiteSpace,\r\n        isLineTerminator: isLineTerminator,\r\n        isIdentifierStartES5: isIdentifierStartES5,\r\n        isIdentifierPartES5: isIdentifierPartES5,\r\n        isIdentifierStartES6: isIdentifierStartES6,\r\n        isIdentifierPartES6: isIdentifierPartES6\r\n    };\r\n}());\r\n/* vim: set sw=4 ts=4 et tw=80 : */\r\n","/*\r\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\r\n\r\n  Redistribution and use in source and binary forms, with or without\r\n  modification, are permitted provided that the following conditions are met:\r\n\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in the\r\n      documentation and/or other materials provided with the distribution.\r\n\r\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var code = require('./code');\r\n\r\n    function isStrictModeReservedWordES6(id) {\r\n        switch (id) {\r\n        case 'implements':\r\n        case 'interface':\r\n        case 'package':\r\n        case 'private':\r\n        case 'protected':\r\n        case 'public':\r\n        case 'static':\r\n        case 'let':\r\n            return true;\r\n        default:\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function isKeywordES5(id, strict) {\r\n        // yield should not be treated as keyword under non-strict mode.\r\n        if (!strict && id === 'yield') {\r\n            return false;\r\n        }\r\n        return isKeywordES6(id, strict);\r\n    }\r\n\r\n    function isKeywordES6(id, strict) {\r\n        if (strict && isStrictModeReservedWordES6(id)) {\r\n            return true;\r\n        }\r\n\r\n        switch (id.length) {\r\n        case 2:\r\n            return (id === 'if') || (id === 'in') || (id === 'do');\r\n        case 3:\r\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\r\n        case 4:\r\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\r\n                (id === 'void') || (id === 'with') || (id === 'enum');\r\n        case 5:\r\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\r\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\r\n                (id === 'class') || (id === 'super');\r\n        case 6:\r\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\r\n                (id === 'switch') || (id === 'export') || (id === 'import');\r\n        case 7:\r\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\r\n        case 8:\r\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\r\n        case 10:\r\n            return (id === 'instanceof');\r\n        default:\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function isReservedWordES5(id, strict) {\r\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\r\n    }\r\n\r\n    function isReservedWordES6(id, strict) {\r\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\r\n    }\r\n\r\n    function isRestrictedWord(id) {\r\n        return id === 'eval' || id === 'arguments';\r\n    }\r\n\r\n    function isIdentifierNameES5(id) {\r\n        var i, iz, ch;\r\n\r\n        if (id.length === 0) { return false; }\r\n\r\n        ch = id.charCodeAt(0);\r\n        if (!code.isIdentifierStartES5(ch)) {\r\n            return false;\r\n        }\r\n\r\n        for (i = 1, iz = id.length; i < iz; ++i) {\r\n            ch = id.charCodeAt(i);\r\n            if (!code.isIdentifierPartES5(ch)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function decodeUtf16(lead, trail) {\r\n        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\r\n    }\r\n\r\n    function isIdentifierNameES6(id) {\r\n        var i, iz, ch, lowCh, check;\r\n\r\n        if (id.length === 0) { return false; }\r\n\r\n        check = code.isIdentifierStartES6;\r\n        for (i = 0, iz = id.length; i < iz; ++i) {\r\n            ch = id.charCodeAt(i);\r\n            if (0xD800 <= ch && ch <= 0xDBFF) {\r\n                ++i;\r\n                if (i >= iz) { return false; }\r\n                lowCh = id.charCodeAt(i);\r\n                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\r\n                    return false;\r\n                }\r\n                ch = decodeUtf16(ch, lowCh);\r\n            }\r\n            if (!check(ch)) {\r\n                return false;\r\n            }\r\n            check = code.isIdentifierPartES6;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isIdentifierES5(id, strict) {\r\n        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\r\n    }\r\n\r\n    function isIdentifierES6(id, strict) {\r\n        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\r\n    }\r\n\r\n    module.exports = {\r\n        isKeywordES5: isKeywordES5,\r\n        isKeywordES6: isKeywordES6,\r\n        isReservedWordES5: isReservedWordES5,\r\n        isReservedWordES6: isReservedWordES6,\r\n        isRestrictedWord: isRestrictedWord,\r\n        isIdentifierNameES5: isIdentifierNameES5,\r\n        isIdentifierNameES6: isIdentifierNameES6,\r\n        isIdentifierES5: isIdentifierES5,\r\n        isIdentifierES6: isIdentifierES6\r\n    };\r\n}());\r\n/* vim: set sw=4 ts=4 et tw=80 : */\r\n","/*\r\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\r\n\r\n  Redistribution and use in source and binary forms, with or without\r\n  modification, are permitted provided that the following conditions are met:\r\n\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in the\r\n      documentation and/or other materials provided with the distribution.\r\n\r\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    exports.ast = require('./ast');\r\n    exports.code = require('./code');\r\n    exports.keyword = require('./keyword');\r\n}());\r\n/* vim: set sw=4 ts=4 et tw=80 : */\r\n","/**\r\n * A specialized version of `_.forEach` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayEach(array, iteratee) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    if (iteratee(array[index], index, array) === false) {\r\n      break;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nmodule.exports = arrayEach;\r\n","var copyObject = require('./_copyObject'),\r\n    keys = require('./keys');\r\n\r\n/**\r\n * The base implementation of `_.assign` without support for multiple sources\r\n * or `customizer` functions.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseAssign(object, source) {\r\n  return object && copyObject(source, keys(source), object);\r\n}\r\n\r\nmodule.exports = baseAssign;\r\n","var copyObject = require('./_copyObject'),\r\n    keysIn = require('./keysIn');\r\n\r\n/**\r\n * The base implementation of `_.assignIn` without support for multiple sources\r\n * or `customizer` functions.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseAssignIn(object, source) {\r\n  return object && copyObject(source, keysIn(source), object);\r\n}\r\n\r\nmodule.exports = baseAssignIn;\r\n","var Stack = require('./_Stack'),\r\n    arrayEach = require('./_arrayEach'),\r\n    assignValue = require('./_assignValue'),\r\n    baseAssign = require('./_baseAssign'),\r\n    baseAssignIn = require('./_baseAssignIn'),\r\n    cloneBuffer = require('./_cloneBuffer'),\r\n    copyArray = require('./_copyArray'),\r\n    copySymbols = require('./_copySymbols'),\r\n    copySymbolsIn = require('./_copySymbolsIn'),\r\n    getAllKeys = require('./_getAllKeys'),\r\n    getAllKeysIn = require('./_getAllKeysIn'),\r\n    getTag = require('./_getTag'),\r\n    initCloneArray = require('./_initCloneArray'),\r\n    initCloneByTag = require('./_initCloneByTag'),\r\n    initCloneObject = require('./_initCloneObject'),\r\n    isArray = require('./isArray'),\r\n    isBuffer = require('./isBuffer'),\r\n    isMap = require('./isMap'),\r\n    isObject = require('./isObject'),\r\n    isSet = require('./isSet'),\r\n    keys = require('./keys');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_FLAT_FLAG = 2,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    arrayTag = '[object Array]',\r\n    boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    errorTag = '[object Error]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    objectTag = '[object Object]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/** Used to identify `toStringTag` values supported by `_.clone`. */\r\nvar cloneableTags = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\r\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\r\ncloneableTags[boolTag] = cloneableTags[dateTag] =\r\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\r\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\r\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\r\ncloneableTags[numberTag] = cloneableTags[objectTag] =\r\ncloneableTags[regexpTag] = cloneableTags[setTag] =\r\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\r\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\r\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\ncloneableTags[errorTag] = cloneableTags[funcTag] =\r\ncloneableTags[weakMapTag] = false;\r\n\r\n/**\r\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {boolean} bitmask The bitmask flags.\r\n *  1 - Deep clone\r\n *  2 - Flatten inherited properties\r\n *  4 - Clone symbols\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\r\n  var result,\r\n      isDeep = bitmask & CLONE_DEEP_FLAG,\r\n      isFlat = bitmask & CLONE_FLAT_FLAG,\r\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\r\n\r\n  if (customizer) {\r\n    result = object ? customizer(value, key, object, stack) : customizer(value);\r\n  }\r\n  if (result !== undefined) {\r\n    return result;\r\n  }\r\n  if (!isObject(value)) {\r\n    return value;\r\n  }\r\n  var isArr = isArray(value);\r\n  if (isArr) {\r\n    result = initCloneArray(value);\r\n    if (!isDeep) {\r\n      return copyArray(value, result);\r\n    }\r\n  } else {\r\n    var tag = getTag(value),\r\n        isFunc = tag == funcTag || tag == genTag;\r\n\r\n    if (isBuffer(value)) {\r\n      return cloneBuffer(value, isDeep);\r\n    }\r\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\r\n      if (!isDeep) {\r\n        return isFlat\r\n          ? copySymbolsIn(value, baseAssignIn(result, value))\r\n          : copySymbols(value, baseAssign(result, value));\r\n      }\r\n    } else {\r\n      if (!cloneableTags[tag]) {\r\n        return object ? value : {};\r\n      }\r\n      result = initCloneByTag(value, tag, isDeep);\r\n    }\r\n  }\r\n  // Check for circular references and return its corresponding clone.\r\n  stack || (stack = new Stack);\r\n  var stacked = stack.get(value);\r\n  if (stacked) {\r\n    return stacked;\r\n  }\r\n  stack.set(value, result);\r\n\r\n  if (isSet(value)) {\r\n    value.forEach(function(subValue) {\r\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\r\n    });\r\n  } else if (isMap(value)) {\r\n    value.forEach(function(subValue, key) {\r\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n    });\r\n  }\r\n\r\n  var keysFunc = isFull\r\n    ? (isFlat ? getAllKeysIn : getAllKeys)\r\n    : (isFlat ? keysIn : keys);\r\n\r\n  var props = isArr ? undefined : keysFunc(value);\r\n  arrayEach(props || value, function(subValue, key) {\r\n    if (props) {\r\n      key = subValue;\r\n      subValue = value[key];\r\n    }\r\n    // Recursively populate clone (susceptible to call stack limits).\r\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n  });\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseClone;\r\n","var getTag = require('./_getTag'),\r\n    isObjectLike = require('./isObjectLike');\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]';\r\n\r\n/**\r\n * The base implementation of `_.isMap` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\r\n */\r\nfunction baseIsMap(value) {\r\n  return isObjectLike(value) && getTag(value) == mapTag;\r\n}\r\n\r\nmodule.exports = baseIsMap;\r\n","var baseGetTag = require('./_baseGetTag'),\r\n    isObjectLike = require('./isObjectLike');\r\n\r\n/** `Object#toString` result references. */\r\nvar regexpTag = '[object RegExp]';\r\n\r\n/**\r\n * The base implementation of `_.isRegExp` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\r\n */\r\nfunction baseIsRegExp(value) {\r\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\r\n}\r\n\r\nmodule.exports = baseIsRegExp;\r\n","var getTag = require('./_getTag'),\r\n    isObjectLike = require('./isObjectLike');\r\n\r\n/** `Object#toString` result references. */\r\nvar setTag = '[object Set]';\r\n\r\n/**\r\n * The base implementation of `_.isSet` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\r\n */\r\nfunction baseIsSet(value) {\r\n  return isObjectLike(value) && getTag(value) == setTag;\r\n}\r\n\r\nmodule.exports = baseIsSet;\r\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\r\n\r\n/**\r\n * Creates a clone of `dataView`.\r\n *\r\n * @private\r\n * @param {Object} dataView The data view to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned data view.\r\n */\r\nfunction cloneDataView(dataView, isDeep) {\r\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\r\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\r\n}\r\n\r\nmodule.exports = cloneDataView;\r\n","/** Used to match `RegExp` flags from their coerced string values. */\r\nvar reFlags = /\\w*$/;\r\n\r\n/**\r\n * Creates a clone of `regexp`.\r\n *\r\n * @private\r\n * @param {Object} regexp The regexp to clone.\r\n * @returns {Object} Returns the cloned regexp.\r\n */\r\nfunction cloneRegExp(regexp) {\r\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\r\n  result.lastIndex = regexp.lastIndex;\r\n  return result;\r\n}\r\n\r\nmodule.exports = cloneRegExp;\r\n","var Symbol = require('./_Symbol');\r\n\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\r\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\r\n\r\n/**\r\n * Creates a clone of the `symbol` object.\r\n *\r\n * @private\r\n * @param {Object} symbol The symbol object to clone.\r\n * @returns {Object} Returns the cloned symbol object.\r\n */\r\nfunction cloneSymbol(symbol) {\r\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\r\n}\r\n\r\nmodule.exports = cloneSymbol;\r\n","var copyObject = require('./_copyObject'),\r\n    getSymbols = require('./_getSymbols');\r\n\r\n/**\r\n * Copies own symbols of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy symbols from.\r\n * @param {Object} [object={}] The object to copy symbols to.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copySymbols(source, object) {\r\n  return copyObject(source, getSymbols(source), object);\r\n}\r\n\r\nmodule.exports = copySymbols;\r\n","var copyObject = require('./_copyObject'),\r\n    getSymbolsIn = require('./_getSymbolsIn');\r\n\r\n/**\r\n * Copies own and inherited symbols of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy symbols from.\r\n * @param {Object} [object={}] The object to copy symbols to.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copySymbolsIn(source, object) {\r\n  return copyObject(source, getSymbolsIn(source), object);\r\n}\r\n\r\nmodule.exports = copySymbolsIn;\r\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\r\n    getSymbolsIn = require('./_getSymbolsIn'),\r\n    keysIn = require('./keysIn');\r\n\r\n/**\r\n * Creates an array of own and inherited enumerable property names and\r\n * symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction getAllKeysIn(object) {\r\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\r\n}\r\n\r\nmodule.exports = getAllKeysIn;\r\n","var arrayPush = require('./_arrayPush'),\r\n    getPrototype = require('./_getPrototype'),\r\n    getSymbols = require('./_getSymbols'),\r\n    stubArray = require('./stubArray');\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\r\n\r\n/**\r\n * Creates an array of the own and inherited enumerable symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of symbols.\r\n */\r\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\r\n  var result = [];\r\n  while (object) {\r\n    arrayPush(result, getSymbols(object));\r\n    object = getPrototype(object);\r\n  }\r\n  return result;\r\n};\r\n\r\nmodule.exports = getSymbolsIn;\r\n","/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Initializes an array clone.\r\n *\r\n * @private\r\n * @param {Array} array The array to clone.\r\n * @returns {Array} Returns the initialized clone.\r\n */\r\nfunction initCloneArray(array) {\r\n  var length = array.length,\r\n      result = new array.constructor(length);\r\n\r\n  // Add properties assigned by `RegExp#exec`.\r\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\r\n    result.index = array.index;\r\n    result.input = array.input;\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = initCloneArray;\r\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\r\n    cloneDataView = require('./_cloneDataView'),\r\n    cloneRegExp = require('./_cloneRegExp'),\r\n    cloneSymbol = require('./_cloneSymbol'),\r\n    cloneTypedArray = require('./_cloneTypedArray');\r\n\r\n/** `Object#toString` result references. */\r\nvar boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/**\r\n * Initializes an object clone based on its `toStringTag`.\r\n *\r\n * **Note:** This function only supports cloning values with tags of\r\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @param {string} tag The `toStringTag` of the object to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneByTag(object, tag, isDeep) {\r\n  var Ctor = object.constructor;\r\n  switch (tag) {\r\n    case arrayBufferTag:\r\n      return cloneArrayBuffer(object);\r\n\r\n    case boolTag:\r\n    case dateTag:\r\n      return new Ctor(+object);\r\n\r\n    case dataViewTag:\r\n      return cloneDataView(object, isDeep);\r\n\r\n    case float32Tag: case float64Tag:\r\n    case int8Tag: case int16Tag: case int32Tag:\r\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\r\n      return cloneTypedArray(object, isDeep);\r\n\r\n    case mapTag:\r\n      return new Ctor;\r\n\r\n    case numberTag:\r\n    case stringTag:\r\n      return new Ctor(object);\r\n\r\n    case regexpTag:\r\n      return cloneRegExp(object);\r\n\r\n    case setTag:\r\n      return new Ctor;\r\n\r\n    case symbolTag:\r\n      return cloneSymbol(object);\r\n  }\r\n}\r\n\r\nmodule.exports = initCloneByTag;\r\n","var baseClone = require('./_baseClone');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * Creates a shallow clone of `value`.\r\n *\r\n * **Note:** This method is loosely based on the\r\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\r\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\r\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\r\n * arrays. The own enumerable properties of `arguments` objects are cloned\r\n * as plain objects. An empty object is returned for uncloneable values such\r\n * as error objects, functions, DOM nodes, and WeakMaps.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to clone.\r\n * @returns {*} Returns the cloned value.\r\n * @see _.cloneDeep\r\n * @example\r\n *\r\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n *\r\n * var shallow = _.clone(objects);\r\n * console.log(shallow[0] === objects[0]);\r\n * // => true\r\n */\r\nfunction clone(value) {\r\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\r\n}\r\n\r\nmodule.exports = clone;\r\n","var baseIsMap = require('./_baseIsMap'),\r\n    baseUnary = require('./_baseUnary'),\r\n    nodeUtil = require('./_nodeUtil');\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\r\n\r\n/**\r\n * Checks if `value` is classified as a `Map` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\r\n * @example\r\n *\r\n * _.isMap(new Map);\r\n * // => true\r\n *\r\n * _.isMap(new WeakMap);\r\n * // => false\r\n */\r\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\r\n\r\nmodule.exports = isMap;\r\n","var baseIsRegExp = require('./_baseIsRegExp'),\r\n    baseUnary = require('./_baseUnary'),\r\n    nodeUtil = require('./_nodeUtil');\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\r\n\r\n/**\r\n * Checks if `value` is classified as a `RegExp` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\r\n * @example\r\n *\r\n * _.isRegExp(/abc/);\r\n * // => true\r\n *\r\n * _.isRegExp('/abc/');\r\n * // => false\r\n */\r\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\r\n\r\nmodule.exports = isRegExp;\r\n","var baseIsSet = require('./_baseIsSet'),\r\n    baseUnary = require('./_baseUnary'),\r\n    nodeUtil = require('./_nodeUtil');\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\r\n\r\n/**\r\n * Checks if `value` is classified as a `Set` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\r\n * @example\r\n *\r\n * _.isSet(new Set);\r\n * // => true\r\n *\r\n * _.isSet(new WeakSet);\r\n * // => false\r\n */\r\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\r\n\r\nmodule.exports = isSet;\r\n","var baseUniq = require('./_baseUniq');\r\n\r\n/**\r\n * Creates a duplicate-free version of an array, using\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons, in which only the first occurrence of each element\r\n * is kept. The order of result values is determined by the order they occur\r\n * in the array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @returns {Array} Returns the new duplicate free array.\r\n * @example\r\n *\r\n * _.uniq([2, 1, 2]);\r\n * // => [2, 1]\r\n */\r\nfunction uniq(array) {\r\n  return (array && array.length) ? baseUniq(array) : [];\r\n}\r\n\r\nmodule.exports = uniq;\r\n","//레이아웃을 위한 파일을 next가 _app.js로 지정해 놓았다.  \r\n//최상위 컴포넌트이다. \r\n//root 관리 \r\nimport React from 'react'; \r\nimport AppLayout from '../components/AppLayout'; \r\nimport Head from 'next/head'; \r\nimport PropTypes from 'prop-types'; \r\n\r\n\r\n//------------------------------------------ 리덕스 \r\nimport reducer from '../reducers'; \r\nimport {Provider} from 'react-redux'; \r\nimport withRedux from 'next-redux-wrapper'\r\nimport {createStore,compose,applyMiddleware} from 'redux'\r\nimport { typeAlias } from 'babel-types';\r\n//------------------------------------------ \r\n \r\nconst NodeBird = ({Component,store}) =>{\r\n                    //next.js에서 넣어줌\r\n\r\n    return (\r\n        <>\r\n        <Provider store={store}>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.min.css\"/>\r\n            </Head>\r\n            <AppLayout >\r\n                <Component />\r\n            </AppLayout>  \r\n         </Provider>\r\n        </>\r\n    ); \r\n};\r\n\r\nNodeBird.propTypes ={\r\n    Component : PropTypes.elementType,\r\n    store     : PropTypes.object,\r\n}\r\n\r\n\r\nexport default withRedux((initialState,options)=>{\r\n\r\n        const middlewares = []; \r\n        //미들웨어는 ACTION과 STORE 사이에서 동작한다. \r\n       \r\n                         //compose 미들웨어 여러개 합성하는거 \r\n        const enhancer = compose(\r\n                                applyMiddleware(...middlewares),\r\n                               typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() :(f) => f,\r\n\r\n                                ); \r\n     \r\n\r\n        const store = createStore(reducer,initialState,enhancer); \r\n        return store; \r\n})(NodeBird); \r\n//props를 넣어줌, store사용할 수 있게 해줌 \r\n//제로초도 그냥 외우라고 함... "],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrrjtxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpl0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA;AACA;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAMA;AAEA;AAGA;AACA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AAEA;;;;A","sourceRoot":""}