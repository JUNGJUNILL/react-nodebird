{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.4fcbce2e84420c7e9034.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["//레이아웃을 위한 파일을 next가 _app.js로 지정해 놓았다.  \r\n//최상위 컴포넌트이다. \r\n//root 관리 \r\nimport React from 'react'; \r\nimport AppLayout from '../components/AppLayout'; \r\nimport Head from 'next/head'; \r\nimport PropTypes from 'prop-types'; \r\n\r\n\r\n//------------------------------------------ 리덕스 \r\nimport reducer from '../reducers'; \r\nimport {Provider} from 'react-redux'; \r\nimport withRedux from 'next-redux-wrapper' //next.js에서 리덕스 사용하기 위한 패키지 \r\nimport {createStore,compose,applyMiddleware} from 'redux'\r\nimport { typeAlias } from 'babel-types';\r\n//------------------------------------------ \r\n \r\nconst NodeBird = ({Component,store}) =>{\r\n                    //next.js에서 넣어줌\r\n\r\n    return (\r\n        <>\r\n        <Provider store={store}>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.min.css\"/>\r\n            </Head>\r\n            <AppLayout >\r\n                <Component />\r\n            </AppLayout>  \r\n         </Provider>\r\n        </>\r\n    ); \r\n};\r\n\r\nNodeBird.propTypes ={\r\n    Component : PropTypes.elementType,\r\n    store     : PropTypes.object,\r\n}\r\n\r\n\r\nexport default withRedux((initialState,options)=>{\r\n\r\n        const middlewares = []; \r\n        //미들웨어는 ACTION과 STORE 사이에서 동작한다. \r\n       \r\n                         //compose 미들웨어 여러개 합성하는거 \r\n        const enhancer = compose(\r\n                                applyMiddleware(...middlewares),\r\n                               //typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() :(f) => f,\r\n                               \r\n                               !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() :(f) => f,\r\n                               //서버 인 경우 window가 없으므로.. \r\n                               ); \r\n                            //redux devtools 깔면 window에서 __REDUX_DEVTOOLS_EXTENSION__() 를 사용할 수 있다. \r\n\r\n        const store = createStore(reducer,initialState,enhancer); \r\n        return store; \r\n})(NodeBird); \r\n//props를 넣어줌, store사용할 수 있게 해줌 \r\n//제로초도 그냥 외우라고 함... "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAMA;AAEA;AAGA;AACA;AAAA;AAIA;AAAA;AAAA;AAJA;AACA;AAQA;AACA;AACA;AAEA;;;;A","sourceRoot":""}