{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.c09017aa6667a2bc1f16.hot-update.js","sources":["webpack:///./reducers/index.js","webpack:///./reducers/user.js"],"sourcesContent":["//root store \r\nimport {combineReducers} from 'redux' //자식 리듀서를 root reducer에서 묶어주는 라이브러리 \r\nimport user from './user'\r\nimport post from './post'\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    post\r\n});\r\n\r\nexport default rootReducer; ","\r\n//------------------------------------ state\r\nexport const initialState = {\r\n\r\n    isLoggedIn : false, \r\n    user:[], \r\n\r\n}; \r\n\r\n//------------------------------------\r\n\r\n\r\n//------------------------------------ setState\r\nconst LOG_IN = 'LOG_IN'; //액션의 이름 \r\nconst LOG_OUT = 'LOG_OUT'; \r\n\r\nconst loginAction = {\r\n    type:LOG_IN,\r\n    data:{\r\n        nickname:'정준일', \r\n    }, \r\n}\r\n\r\nconst logOutAction = {\r\n    type:LOG_OUT,\r\n}\r\n\r\n\r\nconst reducer = (state = initialState , action)=>{\r\n\r\n    switch(action.type){\r\n        \r\n        case LOG_IN:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn:true,\r\n                user:action.data,\r\n            }\r\n        }\r\n        case LOG_OUT:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn:false,\r\n                user:null,\r\n            }\r\n        }\r\n\r\n        default : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\n//------------------------------------.\r\n\r\n\r\n\r\n\r\nexport default reducer; "],"mappings":";;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAEA;AACA;AAHA;AAUA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AADA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAGA;AArBA;AA0BA;AACA;AACA;AAKA;;;;A","sourceRoot":""}