{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\git Repository\\\\react-nodebird\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, memo } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd'; //props로 넘겨주는 함수는 useCallback 필수 \n// useCallback(callback,[]);\n//setState는 전체 리렌더링된다. \n//지나친 최적화 \n\nvar TextInput = memo(function (_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange;\n  return __jsx(Input, {\n    name: \"user-id\",\n    value: value,\n    required: true,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n});\n\nvar Signup = function Signup() {\n  //커스텀 hooks\n  var useInput = function useInput() {\n    var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    var _useState = useState(initValue),\n        value = _useState[0],\n        setter = _useState[1];\n\n    var handler = useCallback(function (e) {\n      setter(e.target.value);\n    }, []);\n    return [value, handler];\n  };\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useState2 = useState(''),\n      passwordCheck = _useState2[0],\n      setPasswordCheck = _useState2[1];\n\n  var _useState3 = useState(false),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      passwordError = _useState4[0],\n      setPasswordError = _useState4[1];\n\n  var _useState5 = useState(false),\n      termError = _useState5[0],\n      setTermError = _useState5[1];\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n  }, [password, passwordCheck, term]);\n  var passwordChk = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onchangeTerm = useCallback(function (e) {\n    setTermError(false);\n    console.log(e.target.checked);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    type: \"password\",\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uD655\\uC778\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    type: \"password\",\n    required: true,\n    onChange: passwordChk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uB2E4\\uB985\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    onChange: onchangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\\uB3D9\\uC758 \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"), termError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["c:/git Repository/react-nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","memo","Form","Input","Checkbox","Button","TextInput","value","onChange","Signup","useInput","initValue","setter","handler","e","target","id","onChangeId","nick","onChangeNick","password","onChangePassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","onSubmit","preventDefault","passwordChk","onchangeTerm","console","log","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, {useState,useCallback,memo} from 'react'\r\nimport {Form,Input,Checkbox, Button} from 'antd'\r\n\r\n//props로 넘겨주는 함수는 useCallback 필수 \r\n// useCallback(callback,[]);\r\n\r\n//setState는 전체 리렌더링된다. \r\n\r\n//지나친 최적화 \r\nconst TextInput = memo(({value,onChange}) =>{\r\n\r\n    return (\r\n        <Input name=\"user-id\" value={value} required onChange={onChange}/>\r\n    ); \r\n}); \r\n\r\nconst Signup = () =>{\r\n\r\n        //커스텀 hooks\r\n        const useInput =(initValue = null) =>{\r\n            const [value,setter] = useState(initValue); \r\n            const handler = useCallback((e) =>{\r\n                setter(e.target.value); \r\n            },[])\r\n            return [value,handler]; \r\n        }\r\n        const [id,onChangeId] = useInput(''); \r\n        const [nick,onChangeNick] = useInput(''); \r\n        const [password,onChangePassword] = useInput(''); \r\n        \r\n        const [passwordCheck, setPasswordCheck] = useState(''); \r\n        const [term, setTerm] = useState(false); \r\n        const [passwordError,setPasswordError] = useState(false); \r\n        const [termError,setTermError] = useState(false); \r\n\r\n        const onSubmit = useCallback((e) =>{\r\n            e.preventDefault();\r\n            if(password !== passwordCheck){\r\n                return setPasswordError(true); \r\n            }\r\n\r\n            if(!term){\r\n                return setTermError(true); \r\n            }\r\n        },[password,passwordCheck,term]);\r\n\r\n        const passwordChk  = useCallback((e) =>{\r\n            setPasswordError(e.target.value !== password); \r\n            setPasswordCheck(e.target.value);\r\n        },[password]) \r\n        \r\n        const onchangeTerm  = useCallback((e) =>{\r\n            setTermError(false); \r\n            console.log(e.target.checked); \r\n            setTerm(e.target.checked); \r\n        },[]);\r\n\r\n\r\n\r\n       \r\n        \r\n\r\n    return( \r\n        <>\r\n            <Form onSubmit={onSubmit} style={{padding:10}}>\r\n                    <div>\r\n                        <label htmlFor=\"user-id\">아이디</label>\r\n                        <br />\r\n                       <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\r\n                        {/*<TextInput value={id} required onChange={onChangeId}/>*/}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-nick\">닉네임</label>\r\n                        <br />\r\n                         <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\r\n                       {/*<TextInput value={nick} required onChange={onChangeNick}/>*/}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-password\">비밀번호</label>\r\n                        <br />\r\n                        <Input name=\"user-password\" value={password} type=\"password\" required onChange={onChangePassword}/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-password-check\">비밀번호확인</label>\r\n                        <br />\r\n                        <Input name=\"user-password-check\" value={passwordCheck} type=\"password\" required onChange={passwordChk}/>\r\n                        {passwordError && <div style={{color:\"red\"}}>비밀번호가 다릅니다.</div>}\r\n                        </div>\r\n                    <div>\r\n                    <Checkbox name=\"user-term\"  onChange={onchangeTerm}>동의 하시겠습니까?</Checkbox>\r\n                    {termError && <div style={{color:\"red\"}}>약관에 동의 하셔야 합니다.</div>}\r\n                    </div>\r\n                    <div style={{marginTop:10}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n                    </div>\r\n            </Form>\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}