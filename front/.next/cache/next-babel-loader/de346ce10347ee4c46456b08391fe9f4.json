{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//------------------------------------ state\nexport const initialState = {\n  isLoggedIn: false,\n  user: []\n}; //------------------------------------\n//------------------------------------ setState\n\nconst LOG_IN = 'LOG_IN'; //액션의 이름 \n\nconst LOG_OUT = 'LOG_OUT';\nconst loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: '정준일'\n  }\n};\nconst logOutAction = {\n  type: LOG_OUT\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n}; //------------------------------------.\n\n\nexport default reducer;","map":{"version":3,"sources":["c:/git Repository/react-nodebird/front/reducers/user.js"],"names":["initialState","isLoggedIn","user","LOG_IN","LOG_OUT","loginAction","type","data","nickname","logOutAction","reducer","state","action"],"mappings":";;;;;;AACA;AACA,OAAO,MAAMA,YAAY,GAAG;AAExBC,EAAAA,UAAU,EAAG,KAFW;AAGxBC,EAAAA,IAAI,EAAC;AAHmB,CAArB,C,CAOP;AAGA;;AACA,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AACzB,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAACH,MADW;AAEhBI,EAAAA,IAAI,EAAC;AACDC,IAAAA,QAAQ,EAAC;AADR;AAFW,CAApB;AAOA,MAAMC,YAAY,GAAG;AACjBH,EAAAA,IAAI,EAACF;AADY,CAArB;;AAKA,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAwBY,MAAxB,KAAiC;AAE7C,UAAOA,MAAM,CAACN,IAAd;AAEI,SAAKH,MAAL;AAAY;AACR,iCACOQ,KADP;AAEIV,UAAAA,UAAU,EAAC,IAFf;AAGIC,UAAAA,IAAI,EAACU,MAAM,CAACL;AAHhB;AAKH;;AACD,SAAKH,OAAL;AAAa;AACT,iCACOO,KADP;AAEIV,UAAAA,UAAU,EAAC,KAFf;AAGIC,UAAAA,IAAI,EAAC;AAHT;AAKH;;AAED;AAAU;AACN,iCACOS,KADP;AAGH;AArBL;AA0BH,CA5BD,C,CA8BA;;;AAKA,eAAeD,OAAf","sourcesContent":["\r\n//------------------------------------ state\r\nexport const initialState = {\r\n\r\n    isLoggedIn : false, \r\n    user:[], \r\n\r\n}; \r\n\r\n//------------------------------------\r\n\r\n\r\n//------------------------------------ setState\r\nconst LOG_IN = 'LOG_IN'; //액션의 이름 \r\nconst LOG_OUT = 'LOG_OUT'; \r\n\r\nconst loginAction = {\r\n    type:LOG_IN,\r\n    data:{\r\n        nickname:'정준일', \r\n    }, \r\n}\r\n\r\nconst logOutAction = {\r\n    type:LOG_OUT,\r\n}\r\n\r\n\r\nconst reducer = (state = initialState , action)=>{\r\n\r\n    switch(action.type){\r\n        \r\n        case LOG_IN:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn:true,\r\n                user:action.data,\r\n            }\r\n        }\r\n        case LOG_OUT:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn:false,\r\n                user:null,\r\n            }\r\n        }\r\n\r\n        default : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\n//------------------------------------.\r\n\r\n\r\n\r\n\r\nexport default reducer; "]},"metadata":{},"sourceType":"module"}