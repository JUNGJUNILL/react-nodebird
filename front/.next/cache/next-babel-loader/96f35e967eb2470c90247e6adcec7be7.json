{"ast":null,"code":"var _jsxFileName = \"c:\\\\git Repository\\\\react-nodebird\\\\front\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react, { useEffect } from 'react'; //next에서는 이거 안해도 된다. \n\nimport { Form, Input, Checkbox, Button, Card, Icon, Avatar } from 'antd';\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport { loginAction, logOutAction, LOG_IN, LOG_OUT } from '../reducers/user';\nconst dummy = {\n  isLoggedIn: true,\n  imagePaths: [],\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '정준일'\n    },\n    content: '첫번째 게시글',\n    img: 'https://cdn.eyesmag.com/wp-content/uploads/2019/05/2019-parasite-film-by-bong-reasons-to-be-waiting-06.jpg'\n  }]\n};\n\nconst Home = ({\n  user,\n  dispath,\n  login,\n  logout\n}) => {\n  /*\r\n    const Home = () =>{\r\n  \r\n     const dispath = useDispatch(); //리덕스 액션 실행기 \r\n  \n     const {user,isLoggedIn} = useSelector(state=>state.user); \r\n                  //useSelector로 리덕스 state전체를 가져올 수 있다. \r\n                  //useState가 useSelector로 바뀌었다고 생각하자.\r\n  \n     console.log(user); \r\n     useEffect(()=>{\r\n         // dispath({\r\n         //     type:LOG_IN, \r\n         //     data:{\r\n         //         nickname:'준일정',\r\n         //     }\r\n         // })\r\n         dispath(loginAction); \r\n  \n     },[]); \r\n  */\n  useEffect(() => {\n    login();\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, user ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778 \\uD588\\uC2B5\\uB2C8\\uB2E4.\", user.nickname) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3 \\uD588\\uC2B5\\uB2C8\\uB2E4.\"), dummy.isLoggedIn && __jsx(Form, {\n    style: {\n      marginBottom: 20\n    },\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB2C8?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, dummy.imagePaths.map((v, i) => {\n    return __jsx(\"div\", {\n      key: i,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: `http://localhost:3065/` + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  }))), dummy.mainPosts.map((v, i) => {\n    return __jsx(Card, {\n      key: i,\n      cover: v.img && __jsx(\"img\", {\n        alt: \"example\",\n        src: v.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      actions: [__jsx(Icon, {\n        type: \"retweet\",\n        key: \"retweet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), __jsx(Icon, {\n        type: \"heart\",\n        key: \"heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), __jsx(Icon, {\n        type: \"message\",\n        key: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), __jsx(Icon, {\n        type: \"ellipsis\",\n        key: \"ellipsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })],\n      extra: __jsx(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"\\uD314\\uB85C\\uC6B0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Card.Meta, {\n      avatar: __jsx(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, v.User.nickname[0]),\n      title: v.User.nickname,\n      description: v.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }));\n}; //리덕스 state를 리엑트 props로 만들겠다.\n\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispath) {\n  return {\n    login: () => dispath(loginAction),\n    logout: () => dispath(logOutAction)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["c:/git Repository/react-nodebird/front/pages/index.js"],"names":["react","useEffect","Form","Input","Checkbox","Button","Card","Icon","Avatar","useDispatch","useSelector","connect","loginAction","logOutAction","LOG_IN","LOG_OUT","dummy","isLoggedIn","imagePaths","mainPosts","User","id","nickname","content","img","Home","user","dispath","login","logout","marginBottom","float","map","v","i","display","width","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import react,{useEffect} from 'react' //next에서는 이거 안해도 된다. \r\nimport {Form,Input,Checkbox,Button,Card,Icon,Avatar} from 'antd'\r\nimport {useDispatch,useSelector, connect} from 'react-redux'\r\nimport { loginAction,logOutAction , LOG_IN, LOG_OUT} from '../reducers/user';\r\n\r\nconst dummy = {\r\n        isLoggedIn : true, \r\n        imagePaths : [], \r\n        mainPosts : [{\r\n            User:{\r\n                id:1,\r\n                nickname:'정준일',\r\n            },\r\n            content:'첫번째 게시글',\r\n            img:'https://cdn.eyesmag.com/wp-content/uploads/2019/05/2019-parasite-film-by-bong-reasons-to-be-waiting-06.jpg',\r\n        }],\r\n    }\r\nconst Home = ({user,dispath,login,logout}) =>{\r\n /*\r\n   const Home = () =>{\r\n \r\n    const dispath = useDispatch(); //리덕스 액션 실행기 \r\n\r\n    const {user,isLoggedIn} = useSelector(state=>state.user); \r\n                 //useSelector로 리덕스 state전체를 가져올 수 있다. \r\n                 //useState가 useSelector로 바뀌었다고 생각하자.\r\n\r\n    console.log(user); \r\n    useEffect(()=>{\r\n        // dispath({\r\n        //     type:LOG_IN, \r\n        //     data:{\r\n        //         nickname:'준일정',\r\n        //     }\r\n        // })\r\n        dispath(loginAction); \r\n\r\n    },[]); \r\n*/\r\n\r\nuseEffect(()=>{\r\n\r\n    login(); \r\n\r\n},[])\r\n    return (\r\n       \r\n        <div>\r\n            {user ? <div>로그인 했습니다.{user.nickname}</div> : <div>로그아웃 했습니다.</div>}\r\n            {dummy.isLoggedIn && <Form style={{marginBottom: 20}} encType=\"multipart/form-data\">\r\n                <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었니?\"/>\r\n                <div>\r\n                    <input type=\"file\" multiple hidden />\r\n                    <Button>이미지 업로드</Button>\r\n                    <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\">짹짹</Button>\r\n                </div>\r\n                <div>\r\n                    {dummy.imagePaths.map((v,i)=>{\r\n                        return (\r\n                                <div key={i} style={{ display:'inline-block'}}>\r\n                                    <img src={`http://localhost:3065/`+v} style={{width:'200px'}} alt={v} />\r\n                                    <div>\r\n                                        <Button>제거</Button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                </div>\r\n\r\n            </Form>}\r\n            {dummy.mainPosts.map((v,i)=>{\r\n                return (\r\n                    <Card key={i}\r\n                        cover={v.img && <img alt=\"example\" src={v.img}/>}\r\n                        actions={[\r\n                                    <Icon type=\"retweet\" key=\"retweet\"/>,\r\n                                    <Icon type=\"heart\" key=\"heart\"/>,\r\n                                    <Icon type=\"message\" key=\"message\"/>,\r\n                                    <Icon type=\"ellipsis\" key=\"ellipsis\"/>,\r\n                        ]}\r\n                        extra={<Button>팔로우</Button>}\r\n                    >\r\n                        <Card.Meta \r\n                            avatar={<Avatar>{v.User.nickname[0]}</Avatar>}\r\n                            title={v.User.nickname}\r\n                            description={v.content}\r\n                        />\r\n\r\n                    </Card>\r\n                );\r\n            })}\r\n        </div>\r\n    ); \r\n}; \r\n\r\n//리덕스 state를 리엑트 props로 만들겠다.\r\nfunction mapStateToProps(state){\r\n    return {\r\n        user:state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispath){\r\n    return{\r\n        login: ()=>dispath(loginAction), \r\n        logout:()=>dispath(logOutAction), \r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home); "]},"metadata":{},"sourceType":"module"}