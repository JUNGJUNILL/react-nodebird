{"ast":null,"code":"var _jsxFileName = \"c:\\\\git Repository\\\\react-nodebird\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, memo } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; //props로 넘겨주는 함수는 useCallback 필수 \n// useCallback(callback,[]);\n//setState는 전체 리렌더링된다. \n//지나친 최적화 \n// const TextInput = memo(({value,onChange}) =>{\n//     return (\n//         <Input name=\"user-id\" value={value} required onChange={onChange}/>\n//     ); \n// }); \n\nconst TextInput = ({\n  value\n}) => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, value);\n};\n\nTextInput.propTypes = {\n  value: PropTypes.string\n}; //커스텀 hooks\n//export const 시 다른데서 import해서 사용할 수 있다. \n\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispa;\n  }, [password, passwordCheck, term]);\n  const passwordChk = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onchangeTerm = useCallback(e => {\n    setTermError(false);\n    console.log(e.target.checked);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    value: 1234,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    type: \"password\",\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uD655\\uC778\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    type: \"password\",\n    required: true,\n    onChange: passwordChk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uB2E4\\uB985\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    onChange: onchangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"\\uB3D9\\uC758 \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"), termError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["c:/git Repository/react-nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","memo","Form","Input","Checkbox","Button","PropTypes","useDispatch","TextInput","value","propTypes","string","useInput","initValue","setter","handler","e","target","Signup","id","onChangeId","nick","onChangeNick","password","onChangePassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","onSubmit","preventDefault","dispa","passwordChk","onchangeTerm","console","log","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, {useState,useCallback,memo} from 'react'\r\nimport {Form,Input,Checkbox, Button} from 'antd'\r\nimport PropTypes from 'prop-types'; \r\nimport {useDispatch} from 'react-redux'\r\n\r\n//props로 넘겨주는 함수는 useCallback 필수 \r\n// useCallback(callback,[]);\r\n\r\n//setState는 전체 리렌더링된다. \r\n\r\n//지나친 최적화 \r\n// const TextInput = memo(({value,onChange}) =>{\r\n\r\n//     return (\r\n//         <Input name=\"user-id\" value={value} required onChange={onChange}/>\r\n//     ); \r\n// }); \r\n\r\n\r\n const TextInput =({value}) =>{\r\n\r\n     return (\r\n     <div>{value}</div>\r\n   ); \r\n }; \r\n \r\n TextInput.propTypes = {\r\n    value : PropTypes.string,\r\n }\r\n\r\n    //커스텀 hooks\r\n    //export const 시 다른데서 import해서 사용할 수 있다. \r\n    export const useInput =(initValue = null) =>{\r\n        const [value,setter] = useState(initValue); \r\n        const handler = useCallback((e) =>{\r\n            setter(e.target.value); \r\n        },[])\r\n        return [value,handler]; \r\n    }\r\n\r\n\r\nconst Signup = () =>{\r\n\r\n      \r\n        const [id,onChangeId] = useInput(''); \r\n        const [nick,onChangeNick] = useInput(''); \r\n        const [password,onChangePassword] = useInput(''); \r\n        \r\n        const [passwordCheck, setPasswordCheck] = useState(''); \r\n        const [term, setTerm] = useState(false); \r\n        const [passwordError,setPasswordError] = useState(false); \r\n        const [termError,setTermError] = useState(false); \r\n\r\n        const onSubmit = useCallback((e) =>{\r\n            e.preventDefault();\r\n            if(password !== passwordCheck){\r\n                return setPasswordError(true); \r\n            }\r\n\r\n            if(!term){\r\n                return setTermError(true); \r\n            }\r\n            dispa\r\n        },[password,passwordCheck,term]);\r\n\r\n        const passwordChk  = useCallback((e) =>{\r\n            setPasswordError(e.target.value !== password); \r\n            setPasswordCheck(e.target.value);\r\n        },[password]) \r\n        \r\n        const onchangeTerm  = useCallback((e) =>{\r\n            setTermError(false); \r\n            console.log(e.target.checked); \r\n            setTerm(e.target.checked); \r\n        },[]);\r\n\r\n\r\n\r\n       \r\n        \r\n\r\n    return( \r\n        <>\r\n            <Form onSubmit={onSubmit} style={{padding:10}}>\r\n                    <TextInput value={1234}></TextInput>\r\n                    <div>\r\n                        <label htmlFor=\"user-id\">아이디</label>\r\n                        <br />\r\n                       <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\r\n                        {/*<TextInput value={id} required onChange={onChangeId}/>*/}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-nick\">닉네임</label>\r\n                        <br />\r\n                         <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\r\n                       {/*<TextInput value={nick} required onChange={onChangeNick}/>*/}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-password\">비밀번호</label>\r\n                        <br />\r\n                        <Input name=\"user-password\" value={password} type=\"password\" required onChange={onChangePassword}/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-password-check\">비밀번호확인</label>\r\n                        <br />\r\n                        <Input name=\"user-password-check\" value={passwordCheck} type=\"password\" required onChange={passwordChk}/>\r\n                        {passwordError && <div style={{color:\"red\"}}>비밀번호가 다릅니다.</div>}\r\n                        </div>\r\n                    <div>\r\n                    <Checkbox name=\"user-term\"  onChange={onchangeTerm}>동의 하시겠습니까?</Checkbox>\r\n                    {termError && <div style={{color:\"red\"}}>약관에 동의 하셔야 합니다.</div>}\r\n                    </div>\r\n                    <div style={{marginTop:10}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n                    </div>\r\n            </Form>\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}