{"ast":null,"code":"var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _defineProperty = require(\"@babel/runtime-corejs2/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//------------------------------------ state\nvar initialState = {\n  isLoggedIn: false,\n  user: []\n}; //------------------------------------\n//------------------------------------ setState\n\nvar LOG_IN = 'LOG_IN'; //액션의 이름 \n\nvar LOG_OUT = 'LOG_OUT';\nvar loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: '정준일'\n  }\n};\nvar logOutAction = {\n  type: LOG_OUT\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n  }\n}; //------------------------------------","map":{"version":3,"sources":["c:/git Repository/react-nodebird/front/reducers/user.js"],"names":["initialState","isLoggedIn","user","LOG_IN","LOG_OUT","loginAction","type","data","nickname","logOutAction","reducer","state","action"],"mappings":";;;;;;;;;;;;;;;;;;AACA;AACA,IAAMA,YAAY,GAAG;AAEjBC,EAAAA,UAAU,EAAG,KAFI;AAGjBC,EAAAA,IAAI,EAAC;AAHY,CAArB,C,CAOA;AAGA;;AACA,IAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AACzB,IAAMC,OAAO,GAAG,SAAhB;AAEA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAACH,MADW;AAEhBI,EAAAA,IAAI,EAAC;AACDC,IAAAA,QAAQ,EAAC;AADR;AAFW,CAApB;AAOA,IAAMC,YAAY,GAAG;AACjBH,EAAAA,IAAI,EAACF;AADY,CAArB;;AAKA,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBX,YAAwB;AAAA,MAATY,MAAS;;AAE7C,UAAOA,MAAM,CAACN,IAAd;AAEI,SAAKH,MAAL;AAAY;AACR,iCACOQ,KADP;AAEIV,UAAAA,UAAU,EAAC,IAFf;AAGIC,UAAAA,IAAI,EAACU,MAAM,CAACL;AAHhB;AAKH;;AACD,SAAKH,OAAL;AAAa;AACT,iCACOO,KADP;AAEIV,UAAAA,UAAU,EAAC,KAFf;AAGIC,UAAAA,IAAI,EAAC;AAHT;AAKH;AAfL;AAoBH,CAtBD,C,CAwBA","sourcesContent":["\r\n//------------------------------------ state\r\nconst initialState = {\r\n\r\n    isLoggedIn : false, \r\n    user:[], \r\n\r\n}; \r\n\r\n//------------------------------------\r\n\r\n\r\n//------------------------------------ setState\r\nconst LOG_IN = 'LOG_IN'; //액션의 이름 \r\nconst LOG_OUT = 'LOG_OUT'; \r\n\r\nconst loginAction = {\r\n    type:LOG_IN,\r\n    data:{\r\n        nickname:'정준일', \r\n    }, \r\n}\r\n\r\nconst logOutAction = {\r\n    type:LOG_OUT,\r\n}\r\n\r\n\r\nconst reducer = (state = initialState , action)=>{\r\n\r\n    switch(action.type){\r\n        \r\n        case LOG_IN:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn:true,\r\n                user:action.data,\r\n            }\r\n        }\r\n        case LOG_OUT:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn:false,\r\n                user:null,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\n//------------------------------------"]},"metadata":{},"sourceType":"script"}